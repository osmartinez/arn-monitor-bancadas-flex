//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entidades.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SistemaGlobalPREEntities : DbContext
    {
        public SistemaGlobalPREEntities()
            : base("name=SistemaGlobalPREEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Agentes> Agentes { get; set; }
        public virtual DbSet<AlmacenesMERCADONA> AlmacenesMERCADONA { get; set; }
        public virtual DbSet<AlmacenSobras> AlmacenSobras { get; set; }
        public virtual DbSet<AlmacenSobrasUbicaciones> AlmacenSobrasUbicaciones { get; set; }
        public virtual DbSet<Aplicacion> Aplicacion { get; set; }
        public virtual DbSet<Arboles> Arboles { get; set; }
        public virtual DbSet<Arn_Imputacion> Arn_Imputacion { get; set; }
        public virtual DbSet<Articulos> Articulos { get; set; }
        public virtual DbSet<ArticulosDetalleCliente> ArticulosDetalleCliente { get; set; }
        public virtual DbSet<ArticulosFamilias> ArticulosFamilias { get; set; }
        public virtual DbSet<ArticulosMateriales> ArticulosMateriales { get; set; }
        public virtual DbSet<ArticulosMaterialesTallas> ArticulosMaterialesTallas { get; set; }
        public virtual DbSet<ArticulosOperaciones> ArticulosOperaciones { get; set; }
        public virtual DbSet<ArticulosOperacionesTallas> ArticulosOperacionesTallas { get; set; }
        public virtual DbSet<ArticulosSubFamilias> ArticulosSubFamilias { get; set; }
        public virtual DbSet<ArticulosTallas> ArticulosTallas { get; set; }
        public virtual DbSet<ArticulosTallasDetalleCliente> ArticulosTallasDetalleCliente { get; set; }
        public virtual DbSet<AUDITAR_IMPRESION_ETIQUETAS_MANUALES> AUDITAR_IMPRESION_ETIQUETAS_MANUALES { get; set; }
        public virtual DbSet<AUDITAR_MOVIMIENTOS_PREPAQUETES> AUDITAR_MOVIMIENTOS_PREPAQUETES { get; set; }
        public virtual DbSet<AUDITAR_MOVIMIENTOS_STOCK> AUDITAR_MOVIMIENTOS_STOCK { get; set; }
        public virtual DbSet<AUDITAR_UBICACIONES> AUDITAR_UBICACIONES { get; set; }
        public virtual DbSet<Bancadas> Bancadas { get; set; }
        public virtual DbSet<BancadasConfiguracionesIncidencias> BancadasConfiguracionesIncidencias { get; set; }
        public virtual DbSet<BancadasConfiguracionesPins> BancadasConfiguracionesPins { get; set; }
        public virtual DbSet<BancadasRegistrosOperarios> BancadasRegistrosOperarios { get; set; }
        public virtual DbSet<Barquillas> Barquillas { get; set; }
        public virtual DbSet<BarquillasConsumos> BarquillasConsumos { get; set; }
        public virtual DbSet<BarquillasContenidos> BarquillasContenidos { get; set; }
        public virtual DbSet<Bultos> Bultos { get; set; }
        public virtual DbSet<BultosLineas> BultosLineas { get; set; }
        public virtual DbSet<CalendarioFestivos> CalendarioFestivos { get; set; }
        public virtual DbSet<CalendarioPlantillas> CalendarioPlantillas { get; set; }
        public virtual DbSet<CalendarioPlantillasParadas> CalendarioPlantillasParadas { get; set; }
        public virtual DbSet<Campos_ERP> Campos_ERP { get; set; }
        public virtual DbSet<Ciclos> Ciclos { get; set; }
        public virtual DbSet<ConfiguracionesGenerales> ConfiguracionesGenerales { get; set; }
        public virtual DbSet<Contenedores> Contenedores { get; set; }
        public virtual DbSet<CriteriosLiquidacionComercial> CriteriosLiquidacionComercial { get; set; }
        public virtual DbSet<EntradasAlmacen> EntradasAlmacen { get; set; }
        public virtual DbSet<EspaciosVagon> EspaciosVagon { get; set; }
        public virtual DbSet<EtiquetasTipo1> EtiquetasTipo1 { get; set; }
        public virtual DbSet<EtiquetasTipo2> EtiquetasTipo2 { get; set; }
        public virtual DbSet<EtiquetasTipo3> EtiquetasTipo3 { get; set; }
        public virtual DbSet<EtiquetasTipo4> EtiquetasTipo4 { get; set; }
        public virtual DbSet<EtiquetasTipo5> EtiquetasTipo5 { get; set; }
        public virtual DbSet<EtiquetasTipo6> EtiquetasTipo6 { get; set; }
        public virtual DbSet<HistoricoDepositos> HistoricoDepositos { get; set; }
        public virtual DbSet<Impresoras> Impresoras { get; set; }
        public virtual DbSet<Impresos> Impresos { get; set; }
        public virtual DbSet<Incidencias> Incidencias { get; set; }
        public virtual DbSet<IncidenciasBancadasRegistros> IncidenciasBancadasRegistros { get; set; }
        public virtual DbSet<IncidenciasEstados> IncidenciasEstados { get; set; }
        public virtual DbSet<IncidenciasRegistradas> IncidenciasRegistradas { get; set; }
        public virtual DbSet<IncidenciasTipos> IncidenciasTipos { get; set; }
        public virtual DbSet<InfoTicketsManuales> InfoTicketsManuales { get; set; }
        public virtual DbSet<InventarioLecturas> InventarioLecturas { get; set; }
        public virtual DbSet<Inventarios> Inventarios { get; set; }
        public virtual DbSet<Liquidaciones> Liquidaciones { get; set; }
        public virtual DbSet<Maquinas> Maquinas { get; set; }
        public virtual DbSet<MaquinasColasTrabajo> MaquinasColasTrabajo { get; set; }
        public virtual DbSet<MaquinasConfiguracionesPins> MaquinasConfiguracionesPins { get; set; }
        public virtual DbSet<MaquinasHistoricoCiclos> MaquinasHistoricoCiclos { get; set; }
        public virtual DbSet<MaquinasParadas> MaquinasParadas { get; set; }
        public virtual DbSet<MaquinasTipos> MaquinasTipos { get; set; }
        public virtual DbSet<MaquinasUtillajesCambios> MaquinasUtillajesCambios { get; set; }
        public virtual DbSet<MercanciasDepositos> MercanciasDepositos { get; set; }
        public virtual DbSet<MercanciasRecepcion> MercanciasRecepcion { get; set; }
        public virtual DbSet<MercanciasSalidas> MercanciasSalidas { get; set; }
        public virtual DbSet<Operaciones> Operaciones { get; set; }
        public virtual DbSet<OperacionesControles> OperacionesControles { get; set; }
        public virtual DbSet<Operarios> Operarios { get; set; }
        public virtual DbSet<OperariosSinSalidas> OperariosSinSalidas { get; set; }
        public virtual DbSet<OrdenesFabricacion> OrdenesFabricacion { get; set; }
        public virtual DbSet<OrdenesFabricacionCantidad> OrdenesFabricacionCantidad { get; set; }
        public virtual DbSet<OrdenesFabricacionEstados> OrdenesFabricacionEstados { get; set; }
        public virtual DbSet<OrdenesFabricacionMateriales> OrdenesFabricacionMateriales { get; set; }
        public virtual DbSet<OrdenesFabricacionMaterialesTallas> OrdenesFabricacionMaterialesTallas { get; set; }
        public virtual DbSet<OrdenesFabricacionObservaciones> OrdenesFabricacionObservaciones { get; set; }
        public virtual DbSet<OrdenesFabricacionOperaciones> OrdenesFabricacionOperaciones { get; set; }
        public virtual DbSet<OrdenesFabricacionOperacionesTallas> OrdenesFabricacionOperacionesTallas { get; set; }
        public virtual DbSet<OrdenesFabricacionOperacionesTallasCantidad> OrdenesFabricacionOperacionesTallasCantidad { get; set; }
        public virtual DbSet<OrdenesFabricacionOperacionesTallasCantidadEjecucion> OrdenesFabricacionOperacionesTallasCantidadEjecucion { get; set; }
        public virtual DbSet<OrdenesFabricacionOperacionesTallasCantidadPlanificacion> OrdenesFabricacionOperacionesTallasCantidadPlanificacion { get; set; }
        public virtual DbSet<OrdenesFabricacionPaquetes> OrdenesFabricacionPaquetes { get; set; }
        public virtual DbSet<OrdenesFabricacionPaquetesBorrar> OrdenesFabricacionPaquetesBorrar { get; set; }
        public virtual DbSet<OrdenesFabricacionPaquetesConsumos> OrdenesFabricacionPaquetesConsumos { get; set; }
        public virtual DbSet<OrdenesFabricacionPaquetesTallas> OrdenesFabricacionPaquetesTallas { get; set; }
        public virtual DbSet<OrdenesFabricacionPaquetesUtilizados> OrdenesFabricacionPaquetesUtilizados { get; set; }
        public virtual DbSet<OrdenesFabricacionProductos> OrdenesFabricacionProductos { get; set; }
        public virtual DbSet<OrdenesFabricacionTipos> OrdenesFabricacionTipos { get; set; }
        public virtual DbSet<PackingList> PackingList { get; set; }
        public virtual DbSet<PaletBultos> PaletBultos { get; set; }
        public virtual DbSet<PaletsMERCADONA> PaletsMERCADONA { get; set; }
        public virtual DbSet<Paquetes> Paquetes { get; set; }
        public virtual DbSet<PaquetesConsumosInternos> PaquetesConsumosInternos { get; set; }
        public virtual DbSet<PedidoBloqueado> PedidoBloqueado { get; set; }
        public virtual DbSet<PedidoNoFabricar> PedidoNoFabricar { get; set; }
        public virtual DbSet<PedidoOrdenesFabricacion> PedidoOrdenesFabricacion { get; set; }
        public virtual DbSet<PedidoReferencia> PedidoReferencia { get; set; }
        public virtual DbSet<PowerBIGrupo> PowerBIGrupo { get; set; }
        public virtual DbSet<PowerBIPagina> PowerBIPagina { get; set; }
        public virtual DbSet<PowerBISector> PowerBISector { get; set; }
        public virtual DbSet<PreciosLaboralesSubcontratas> PreciosLaboralesSubcontratas { get; set; }
        public virtual DbSet<PrePaquetes> PrePaquetes { get; set; }
        public virtual DbSet<PrePaquetesAgrupaciones> PrePaquetesAgrupaciones { get; set; }
        public virtual DbSet<PrepaquetesConsumidos> PrepaquetesConsumidos { get; set; }
        public virtual DbSet<ProductosMERCADONA> ProductosMERCADONA { get; set; }
        public virtual DbSet<Referencias> Referencias { get; set; }
        public virtual DbSet<RELACIONPEDIDOS> RELACIONPEDIDOS { get; set; }
        public virtual DbSet<Secciones> Secciones { get; set; }
        public virtual DbSet<StockArticulos> StockArticulos { get; set; }
        public virtual DbSet<StockArticulosTallas> StockArticulosTallas { get; set; }
        public virtual DbSet<StockArticulosTipos> StockArticulosTipos { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Talleres> Talleres { get; set; }
        public virtual DbSet<TalleresPaquetesEnvios> TalleresPaquetesEnvios { get; set; }
        public virtual DbSet<TalleresPaquetesRecepciones> TalleresPaquetesRecepciones { get; set; }
        public virtual DbSet<TicketCalculos> TicketCalculos { get; set; }
        public virtual DbSet<Tickets> Tickets { get; set; }
        public virtual DbSet<TicketsAgrupacion> TicketsAgrupacion { get; set; }
        public virtual DbSet<TicketsCantidad> TicketsCantidad { get; set; }
        public virtual DbSet<TicketTipos> TicketTipos { get; set; }
        public virtual DbSet<Trenes> Trenes { get; set; }
        public virtual DbSet<TrenesVagones> TrenesVagones { get; set; }
        public virtual DbSet<TrenesVagonesEspacios> TrenesVagonesEspacios { get; set; }
        public virtual DbSet<Ubicaciones> Ubicaciones { get; set; }
        public virtual DbSet<UbicacionesARN> UbicacionesARN { get; set; }
        public virtual DbSet<UbicacionReferencia> UbicacionReferencia { get; set; }
        public virtual DbSet<UnidadesMedida> UnidadesMedida { get; set; }
        public virtual DbSet<UsuariosAD> UsuariosAD { get; set; }
        public virtual DbSet<UsuariosADAplicaciones> UsuariosADAplicaciones { get; set; }
        public virtual DbSet<Utillajes> Utillajes { get; set; }
        public virtual DbSet<UtillajesTallas> UtillajesTallas { get; set; }
        public virtual DbSet<UtillajesTallasColeccion> UtillajesTallasColeccion { get; set; }
        public virtual DbSet<UtillajesTallasRendimiento> UtillajesTallasRendimiento { get; set; }
        public virtual DbSet<ControlSobrasLog> ControlSobrasLog { get; set; }
        public virtual DbSet<MaquinasRegistrosDatos> MaquinasRegistrosDatos { get; set; }
        public virtual DbSet<MaquinasTiposIncidencias> MaquinasTiposIncidencias { get; set; }
    
        [DbFunction("SistemaGlobalPREEntities", "IdToEAN13")]
        public virtual IQueryable<IdToEAN13_Result> IdToEAN13(Nullable<int> id, string prefix)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("prefix", prefix) :
                new ObjectParameter("prefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<IdToEAN13_Result>("[SistemaGlobalPREEntities].[IdToEAN13](@id, @prefix)", idParameter, prefixParameter);
        }
    
        [DbFunction("SistemaGlobalPREEntities", "SF_Split_NVarChar")]
        public virtual IQueryable<SF_Split_NVarChar_Result> SF_Split_NVarChar(string stringToSplit)
        {
            var stringToSplitParameter = stringToSplit != null ?
                new ObjectParameter("stringToSplit", stringToSplit) :
                new ObjectParameter("stringToSplit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SF_Split_NVarChar_Result>("[SistemaGlobalPREEntities].[SF_Split_NVarChar](@stringToSplit)", stringToSplitParameter);
        }
    
        [DbFunction("SistemaGlobalPREEntities", "split_tallas")]
        public virtual IQueryable<split_tallas_Result> split_tallas(string stringToSplit)
        {
            var stringToSplitParameter = stringToSplit != null ?
                new ObjectParameter("stringToSplit", stringToSplit) :
                new ObjectParameter("stringToSplit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<split_tallas_Result>("[SistemaGlobalPREEntities].[split_tallas](@stringToSplit)", stringToSplitParameter);
        }
    
        public virtual int PasarDatos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PasarDatos");
        }
    
        public virtual ObjectResult<string> SP_ActualizarGrupoTallas(Nullable<short> codigoEmpresa, string codArticulo, Nullable<short> grupoTallasNuevo, Nullable<short> grupoTallasAnterior)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(short));
    
            var codArticuloParameter = codArticulo != null ?
                new ObjectParameter("CodArticulo", codArticulo) :
                new ObjectParameter("CodArticulo", typeof(string));
    
            var grupoTallasNuevoParameter = grupoTallasNuevo.HasValue ?
                new ObjectParameter("GrupoTallasNuevo", grupoTallasNuevo) :
                new ObjectParameter("GrupoTallasNuevo", typeof(short));
    
            var grupoTallasAnteriorParameter = grupoTallasAnterior.HasValue ?
                new ObjectParameter("GrupoTallasAnterior", grupoTallasAnterior) :
                new ObjectParameter("GrupoTallasAnterior", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ActualizarGrupoTallas", codigoEmpresaParameter, codArticuloParameter, grupoTallasNuevoParameter, grupoTallasAnteriorParameter);
        }
    
        public virtual int SP_ActualizarLineaPedido(Nullable<int> codigoEmpresa, Nullable<int> numeroPedido, Nullable<System.Guid> lineaPosicion)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var numeroPedidoParameter = numeroPedido.HasValue ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(int));
    
            var lineaPosicionParameter = lineaPosicion.HasValue ?
                new ObjectParameter("LineaPosicion", lineaPosicion) :
                new ObjectParameter("LineaPosicion", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActualizarLineaPedido", codigoEmpresaParameter, numeroPedidoParameter, lineaPosicionParameter);
        }
    
        public virtual int SP_ActualizarPosicionesTareasProgramadasEnMaquina(Nullable<int> idMaquina)
        {
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActualizarPosicionesTareasProgramadasEnMaquina", idMaquinaParameter);
        }
    
        public virtual int SP_ActualizarStockArticuloTalla(Nullable<int> id, Nullable<double> cantidad)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ActualizarStockArticuloTalla", idParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<SP_AgruparContenedor_Result> SP_AgruparContenedor(string codigoAgrupacion, string codigoEtiqueta)
        {
            var codigoAgrupacionParameter = codigoAgrupacion != null ?
                new ObjectParameter("CodigoAgrupacion", codigoAgrupacion) :
                new ObjectParameter("CodigoAgrupacion", typeof(string));
    
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_AgruparContenedor_Result>("SP_AgruparContenedor", codigoAgrupacionParameter, codigoEtiquetaParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_ArticulosRutasOperaciones_Result> SP_ArticulosRutasOperaciones(Nullable<int> codigoEmpresa, string codigoArticulo)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ArticulosRutasOperaciones_Result>("SP_ArticulosRutasOperaciones", codigoEmpresaParameter, codigoArticuloParameter);
        }
    
        public virtual ObjectResult<SP_ArticulosRutasOperacionesMaterial_Result> SP_ArticulosRutasOperacionesMaterial(string codigoArticulo)
        {
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ArticulosRutasOperacionesMaterial_Result>("SP_ArticulosRutasOperacionesMaterial", codigoArticuloParameter);
        }
    
        public virtual ObjectResult<SP_ArticulosRutasOperacionesOrden_Result> SP_ArticulosRutasOperacionesOrden(Nullable<int> codigoEmpresa, string codigoArticulo, string orden, Nullable<int> revision)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var ordenParameter = orden != null ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(string));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ArticulosRutasOperacionesOrden_Result>("SP_ArticulosRutasOperacionesOrden", codigoEmpresaParameter, codigoArticuloParameter, ordenParameter, revisionParameter);
        }
    
        public virtual ObjectResult<SP_ArticulosSage_Result> SP_ArticulosSage(Nullable<int> codigoEmpresa, string descripcionArticulo, string codigoArticulo, string modelo, string unidadMedidaFabricacion, string codigoCliente, string codigoFamilia, string codigoSubFamilia)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var descripcionArticuloParameter = descripcionArticulo != null ?
                new ObjectParameter("DescripcionArticulo", descripcionArticulo) :
                new ObjectParameter("DescripcionArticulo", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var unidadMedidaFabricacionParameter = unidadMedidaFabricacion != null ?
                new ObjectParameter("UnidadMedidaFabricacion", unidadMedidaFabricacion) :
                new ObjectParameter("UnidadMedidaFabricacion", typeof(string));
    
            var codigoClienteParameter = codigoCliente != null ?
                new ObjectParameter("CodigoCliente", codigoCliente) :
                new ObjectParameter("CodigoCliente", typeof(string));
    
            var codigoFamiliaParameter = codigoFamilia != null ?
                new ObjectParameter("CodigoFamilia", codigoFamilia) :
                new ObjectParameter("CodigoFamilia", typeof(string));
    
            var codigoSubFamiliaParameter = codigoSubFamilia != null ?
                new ObjectParameter("CodigoSubFamilia", codigoSubFamilia) :
                new ObjectParameter("CodigoSubFamilia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ArticulosSage_Result>("SP_ArticulosSage", codigoEmpresaParameter, descripcionArticuloParameter, codigoArticuloParameter, modeloParameter, unidadMedidaFabricacionParameter, codigoClienteParameter, codigoFamiliaParameter, codigoSubFamiliaParameter);
        }
    
        public virtual ObjectResult<SP_ArticulosSageVentas_Result> SP_ArticulosSageVentas(Nullable<int> codigoEmpresa, string descripcionArticulo, string codigoArticulo, string modelo, string unidadMedidaFabricacion, string nombreCliente, string codigoFamilia, string codigoSubFamilia, Nullable<int> tipoArticulo)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var descripcionArticuloParameter = descripcionArticulo != null ?
                new ObjectParameter("DescripcionArticulo", descripcionArticulo) :
                new ObjectParameter("DescripcionArticulo", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var unidadMedidaFabricacionParameter = unidadMedidaFabricacion != null ?
                new ObjectParameter("UnidadMedidaFabricacion", unidadMedidaFabricacion) :
                new ObjectParameter("UnidadMedidaFabricacion", typeof(string));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var codigoFamiliaParameter = codigoFamilia != null ?
                new ObjectParameter("CodigoFamilia", codigoFamilia) :
                new ObjectParameter("CodigoFamilia", typeof(string));
    
            var codigoSubFamiliaParameter = codigoSubFamilia != null ?
                new ObjectParameter("CodigoSubFamilia", codigoSubFamilia) :
                new ObjectParameter("CodigoSubFamilia", typeof(string));
    
            var tipoArticuloParameter = tipoArticulo.HasValue ?
                new ObjectParameter("TipoArticulo", tipoArticulo) :
                new ObjectParameter("TipoArticulo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ArticulosSageVentas_Result>("SP_ArticulosSageVentas", codigoEmpresaParameter, descripcionArticuloParameter, codigoArticuloParameter, modeloParameter, unidadMedidaFabricacionParameter, nombreClienteParameter, codigoFamiliaParameter, codigoSubFamiliaParameter, tipoArticuloParameter);
        }
    
        public virtual ObjectResult<SP_ArticulosTallas_Result> SP_ArticulosTallas(Nullable<int> codigoEmpresa, string codigoArticulo)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ArticulosTallas_Result>("SP_ArticulosTallas", codigoEmpresaParameter, codigoArticuloParameter);
        }
    
        public virtual ObjectResult<SP_ArticuloUnidadesMedida_Result> SP_ArticuloUnidadesMedida(Nullable<int> codigoEmpresa, string codigoArticulo)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ArticuloUnidadesMedida_Result>("SP_ArticuloUnidadesMedida", codigoEmpresaParameter, codigoArticuloParameter);
        }
    
        public virtual ObjectResult<SP_BancadaActualizar_Result> SP_BancadaActualizar(Nullable<int> id, string descripcion, string observaciones, string pinLed, string pinBuzzer, Nullable<double> contadorPaquetes, Nullable<bool> esContadorPaquetesAutomatico, Nullable<bool> esManual)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var pinLedParameter = pinLed != null ?
                new ObjectParameter("PinLed", pinLed) :
                new ObjectParameter("PinLed", typeof(string));
    
            var pinBuzzerParameter = pinBuzzer != null ?
                new ObjectParameter("PinBuzzer", pinBuzzer) :
                new ObjectParameter("PinBuzzer", typeof(string));
    
            var contadorPaquetesParameter = contadorPaquetes.HasValue ?
                new ObjectParameter("ContadorPaquetes", contadorPaquetes) :
                new ObjectParameter("ContadorPaquetes", typeof(double));
    
            var esContadorPaquetesAutomaticoParameter = esContadorPaquetesAutomatico.HasValue ?
                new ObjectParameter("EsContadorPaquetesAutomatico", esContadorPaquetesAutomatico) :
                new ObjectParameter("EsContadorPaquetesAutomatico", typeof(bool));
    
            var esManualParameter = esManual.HasValue ?
                new ObjectParameter("EsManual", esManual) :
                new ObjectParameter("EsManual", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaActualizar_Result>("SP_BancadaActualizar", idParameter, descripcionParameter, observacionesParameter, pinLedParameter, pinBuzzerParameter, contadorPaquetesParameter, esContadorPaquetesAutomaticoParameter, esManualParameter);
        }
    
        public virtual ObjectResult<SP_BancadaActualizarConfiguracionIncidencias_Result> SP_BancadaActualizarConfiguracionIncidencias(Nullable<int> id, string nombre, Nullable<bool> habilitada, string pinNotificacion1, string pinNotificacion2, string avisarA, Nullable<bool> corregible, Nullable<int> segundosEjecucion, Nullable<int> idBancada, Nullable<bool> bloqueante)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var habilitadaParameter = habilitada.HasValue ?
                new ObjectParameter("Habilitada", habilitada) :
                new ObjectParameter("Habilitada", typeof(bool));
    
            var pinNotificacion1Parameter = pinNotificacion1 != null ?
                new ObjectParameter("PinNotificacion1", pinNotificacion1) :
                new ObjectParameter("PinNotificacion1", typeof(string));
    
            var pinNotificacion2Parameter = pinNotificacion2 != null ?
                new ObjectParameter("PinNotificacion2", pinNotificacion2) :
                new ObjectParameter("PinNotificacion2", typeof(string));
    
            var avisarAParameter = avisarA != null ?
                new ObjectParameter("AvisarA", avisarA) :
                new ObjectParameter("AvisarA", typeof(string));
    
            var corregibleParameter = corregible.HasValue ?
                new ObjectParameter("Corregible", corregible) :
                new ObjectParameter("Corregible", typeof(bool));
    
            var segundosEjecucionParameter = segundosEjecucion.HasValue ?
                new ObjectParameter("SegundosEjecucion", segundosEjecucion) :
                new ObjectParameter("SegundosEjecucion", typeof(int));
    
            var idBancadaParameter = idBancada.HasValue ?
                new ObjectParameter("IdBancada", idBancada) :
                new ObjectParameter("IdBancada", typeof(int));
    
            var bloqueanteParameter = bloqueante.HasValue ?
                new ObjectParameter("Bloqueante", bloqueante) :
                new ObjectParameter("Bloqueante", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaActualizarConfiguracionIncidencias_Result>("SP_BancadaActualizarConfiguracionIncidencias", idParameter, nombreParameter, habilitadaParameter, pinNotificacion1Parameter, pinNotificacion2Parameter, avisarAParameter, corregibleParameter, segundosEjecucionParameter, idBancadaParameter, bloqueanteParameter);
        }
    
        public virtual ObjectResult<SP_BancadaBuscarConfiguracionesIncidenciasPorId_Result> SP_BancadaBuscarConfiguracionesIncidenciasPorId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaBuscarConfiguracionesIncidenciasPorId_Result>("SP_BancadaBuscarConfiguracionesIncidenciasPorId", idParameter);
        }
    
        public virtual ObjectResult<SP_BancadaBuscarConfiguracionesPinsPorId_Result> SP_BancadaBuscarConfiguracionesPinsPorId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaBuscarConfiguracionesPinsPorId_Result>("SP_BancadaBuscarConfiguracionesPinsPorId", idParameter);
        }
    
        public virtual ObjectResult<SP_BancadaBuscarMaquinasPorId_Result> SP_BancadaBuscarMaquinasPorId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaBuscarMaquinasPorId_Result>("SP_BancadaBuscarMaquinasPorId", idParameter);
        }
    
        public virtual ObjectResult<SP_BancadaBuscarPorCodigoEtiqueta_Result> SP_BancadaBuscarPorCodigoEtiqueta(string codigoEtiqueta)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaBuscarPorCodigoEtiqueta_Result>("SP_BancadaBuscarPorCodigoEtiqueta", codigoEtiquetaParameter);
        }
    
        public virtual ObjectResult<SP_BancadaBuscarPorDescripcion_Result> SP_BancadaBuscarPorDescripcion(string descripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaBuscarPorDescripcion_Result>("SP_BancadaBuscarPorDescripcion", descripcionParameter);
        }
    
        public virtual ObjectResult<SP_BancadaBuscarPorId_Result> SP_BancadaBuscarPorId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaBuscarPorId_Result>("SP_BancadaBuscarPorId", idParameter);
        }
    
        public virtual ObjectResult<SP_BancadaCrear_Result> SP_BancadaCrear(string descripcion, string observaciones, string pinLed, string pinBuzzer, Nullable<double> contadorPaquetes, Nullable<bool> esContadorPaquetesAutomatico, Nullable<bool> esManual)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var pinLedParameter = pinLed != null ?
                new ObjectParameter("PinLed", pinLed) :
                new ObjectParameter("PinLed", typeof(string));
    
            var pinBuzzerParameter = pinBuzzer != null ?
                new ObjectParameter("PinBuzzer", pinBuzzer) :
                new ObjectParameter("PinBuzzer", typeof(string));
    
            var contadorPaquetesParameter = contadorPaquetes.HasValue ?
                new ObjectParameter("ContadorPaquetes", contadorPaquetes) :
                new ObjectParameter("ContadorPaquetes", typeof(double));
    
            var esContadorPaquetesAutomaticoParameter = esContadorPaquetesAutomatico.HasValue ?
                new ObjectParameter("EsContadorPaquetesAutomatico", esContadorPaquetesAutomatico) :
                new ObjectParameter("EsContadorPaquetesAutomatico", typeof(bool));
    
            var esManualParameter = esManual.HasValue ?
                new ObjectParameter("EsManual", esManual) :
                new ObjectParameter("EsManual", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaCrear_Result>("SP_BancadaCrear", descripcionParameter, observacionesParameter, pinLedParameter, pinBuzzerParameter, contadorPaquetesParameter, esContadorPaquetesAutomaticoParameter, esManualParameter);
        }
    
        public virtual ObjectResult<SP_BancadaObtenerTodos_Result> SP_BancadaObtenerTodos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaObtenerTodos_Result>("SP_BancadaObtenerTodos");
        }
    
        public virtual ObjectResult<SP_BancadaOperariosActuales_Result> SP_BancadaOperariosActuales(Nullable<int> idBancada)
        {
            var idBancadaParameter = idBancada.HasValue ?
                new ObjectParameter("IdBancada", idBancada) :
                new ObjectParameter("IdBancada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaOperariosActuales_Result>("SP_BancadaOperariosActuales", idBancadaParameter);
        }
    
        public virtual ObjectResult<SP_BancadaRegistroEntradaOperarioPorCodigo_Result> SP_BancadaRegistroEntradaOperarioPorCodigo(string codigo, Nullable<int> idBancada)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var idBancadaParameter = idBancada.HasValue ?
                new ObjectParameter("IdBancada", idBancada) :
                new ObjectParameter("IdBancada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaRegistroEntradaOperarioPorCodigo_Result>("SP_BancadaRegistroEntradaOperarioPorCodigo", codigoParameter, idBancadaParameter);
        }
    
        public virtual ObjectResult<SP_BancadaRegistroSalidaOperarioPorCodigo_Result> SP_BancadaRegistroSalidaOperarioPorCodigo(string codigo, Nullable<int> idBancada)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var idBancadaParameter = idBancada.HasValue ?
                new ObjectParameter("IdBancada", idBancada) :
                new ObjectParameter("IdBancada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BancadaRegistroSalidaOperarioPorCodigo_Result>("SP_BancadaRegistroSalidaOperarioPorCodigo", codigoParameter, idBancadaParameter);
        }
    
        public virtual ObjectResult<SP_BarquillaBuscarEnSeccion_Result> SP_BarquillaBuscarEnSeccion(string codigoEtiqueta, string codigoSeccion)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var codigoSeccionParameter = codigoSeccion != null ?
                new ObjectParameter("CodigoSeccion", codigoSeccion) :
                new ObjectParameter("CodigoSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BarquillaBuscarEnSeccion_Result>("SP_BarquillaBuscarEnSeccion", codigoEtiquetaParameter, codigoSeccionParameter);
        }
    
        public virtual ObjectResult<SP_BarquillaBuscarInformacionEnSeccion_Result> SP_BarquillaBuscarInformacionEnSeccion(string codigoEtiqueta, string codigoSeccion)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var codigoSeccionParameter = codigoSeccion != null ?
                new ObjectParameter("CodigoSeccion", codigoSeccion) :
                new ObjectParameter("CodigoSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BarquillaBuscarInformacionEnSeccion_Result>("SP_BarquillaBuscarInformacionEnSeccion", codigoEtiquetaParameter, codigoSeccionParameter);
        }
    
        public virtual ObjectResult<SP_BarquillaBuscarPorCodigo_Result> SP_BarquillaBuscarPorCodigo(string codigoEtiqueta)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BarquillaBuscarPorCodigo_Result>("SP_BarquillaBuscarPorCodigo", codigoEtiquetaParameter);
        }
    
        public virtual ObjectResult<SP_BarquillaConsumirEnSeccion_Result> SP_BarquillaConsumirEnSeccion(string codigoEtiqueta, Nullable<int> idOperacion, Nullable<int> idObrero, Nullable<int> idMaquina, Nullable<int> idBarquillaContenido, Nullable<double> cantidad, string talla)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            var idObreroParameter = idObrero.HasValue ?
                new ObjectParameter("IdObrero", idObrero) :
                new ObjectParameter("IdObrero", typeof(int));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var idBarquillaContenidoParameter = idBarquillaContenido.HasValue ?
                new ObjectParameter("IdBarquillaContenido", idBarquillaContenido) :
                new ObjectParameter("IdBarquillaContenido", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(double));
    
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BarquillaConsumirEnSeccion_Result>("SP_BarquillaConsumirEnSeccion", codigoEtiquetaParameter, idOperacionParameter, idObreroParameter, idMaquinaParameter, idBarquillaContenidoParameter, cantidadParameter, tallaParameter);
        }
    
        public virtual ObjectResult<SP_BarquillaObtenerSiguienteOrdenAgrupacion_Result> SP_BarquillaObtenerSiguienteOrdenAgrupacion(string codigoEtiqueta, Nullable<int> idOrdenAnterior, Nullable<int> idOperacionAnterior)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var idOrdenAnteriorParameter = idOrdenAnterior.HasValue ?
                new ObjectParameter("IdOrdenAnterior", idOrdenAnterior) :
                new ObjectParameter("IdOrdenAnterior", typeof(int));
    
            var idOperacionAnteriorParameter = idOperacionAnterior.HasValue ?
                new ObjectParameter("IdOperacionAnterior", idOperacionAnterior) :
                new ObjectParameter("IdOperacionAnterior", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BarquillaObtenerSiguienteOrdenAgrupacion_Result>("SP_BarquillaObtenerSiguienteOrdenAgrupacion", codigoEtiquetaParameter, idOrdenAnteriorParameter, idOperacionAnteriorParameter);
        }
    
        public virtual int SP_BarquillaUbicar(string codigoEtiqueta, string codUbicacion)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var codUbicacionParameter = codUbicacion != null ?
                new ObjectParameter("CodUbicacion", codUbicacion) :
                new ObjectParameter("CodUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BarquillaUbicar", codigoEtiquetaParameter, codUbicacionParameter);
        }
    
        public virtual ObjectResult<string> SP_BorrarOrdenFabricacion(string codigo, Nullable<int> idOrden)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("IdOrden", idOrden) :
                new ObjectParameter("IdOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_BorrarOrdenFabricacion", codigoParameter, idOrdenParameter);
        }
    
        public virtual int SP_BorrarStock(Nullable<int> idStock)
        {
            var idStockParameter = idStock.HasValue ?
                new ObjectParameter("IdStock", idStock) :
                new ObjectParameter("IdStock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BorrarStock", idStockParameter);
        }
    
        public virtual ObjectResult<string> SP_BuscarCodigoArticuloPorIdOrden(Nullable<int> idOrden)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("IdOrden", idOrden) :
                new ObjectParameter("IdOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_BuscarCodigoArticuloPorIdOrden", idOrdenParameter);
        }
    
        public virtual ObjectResult<SP_BuscarImpresionMarcajePorUtillajeTalla_Result> SP_BuscarImpresionMarcajePorUtillajeTalla(string codigoUtillaje, string talla)
        {
            var codigoUtillajeParameter = codigoUtillaje != null ?
                new ObjectParameter("CodigoUtillaje", codigoUtillaje) :
                new ObjectParameter("CodigoUtillaje", typeof(string));
    
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarImpresionMarcajePorUtillajeTalla_Result>("SP_BuscarImpresionMarcajePorUtillajeTalla", codigoUtillajeParameter, tallaParameter);
        }
    
        public virtual ObjectResult<SP_BuscarMaquinaPorCodigo_Result> SP_BuscarMaquinaPorCodigo(string codigoMaquina)
        {
            var codigoMaquinaParameter = codigoMaquina != null ?
                new ObjectParameter("CodigoMaquina", codigoMaquina) :
                new ObjectParameter("CodigoMaquina", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarMaquinaPorCodigo_Result>("SP_BuscarMaquinaPorCodigo", codigoMaquinaParameter);
        }
    
        public virtual ObjectResult<SP_BuscarOperacionesPorOrdenFabricacion_Result> SP_BuscarOperacionesPorOrdenFabricacion(Nullable<int> idOrden)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("IdOrden", idOrden) :
                new ObjectParameter("IdOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarOperacionesPorOrdenFabricacion_Result>("SP_BuscarOperacionesPorOrdenFabricacion", idOrdenParameter);
        }
    
        public virtual ObjectResult<SP_BuscarOperacionesPorPrepaqueteMaquina_Result> SP_BuscarOperacionesPorPrepaqueteMaquina(string codigoEtiqueta, string codigoMaquina)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var codigoMaquinaParameter = codigoMaquina != null ?
                new ObjectParameter("CodigoMaquina", codigoMaquina) :
                new ObjectParameter("CodigoMaquina", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarOperacionesPorPrepaqueteMaquina_Result>("SP_BuscarOperacionesPorPrepaqueteMaquina", codigoEtiquetaParameter, codigoMaquinaParameter);
        }
    
        public virtual ObjectResult<SP_BuscarOperacionesTallasPorOperacion_Result> SP_BuscarOperacionesTallasPorOperacion(Nullable<int> idOperacion)
        {
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarOperacionesTallasPorOperacion_Result>("SP_BuscarOperacionesTallasPorOperacion", idOperacionParameter);
        }
    
        public virtual ObjectResult<SP_BuscarOperacionPorOrdenFabricacionSeccion_Result> SP_BuscarOperacionPorOrdenFabricacionSeccion(Nullable<int> idOrden, string codSeccion)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("IdOrden", idOrden) :
                new ObjectParameter("IdOrden", typeof(int));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarOperacionPorOrdenFabricacionSeccion_Result>("SP_BuscarOperacionPorOrdenFabricacionSeccion", idOrdenParameter, codSeccionParameter);
        }
    
        public virtual ObjectResult<SP_BuscarOrdenFabricacionPorId_Result> SP_BuscarOrdenFabricacionPorId(Nullable<int> idOrden)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("IdOrden", idOrden) :
                new ObjectParameter("IdOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarOrdenFabricacionPorId_Result>("SP_BuscarOrdenFabricacionPorId", idOrdenParameter);
        }
    
        public virtual ObjectResult<SP_BuscarPaquetePorCodigoEtiqueta_Result> SP_BuscarPaquetePorCodigoEtiqueta(string codigoEtiqueta)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarPaquetePorCodigoEtiqueta_Result>("SP_BuscarPaquetePorCodigoEtiqueta", codigoEtiquetaParameter);
        }
    
        public virtual ObjectResult<SP_BuscarPaquetesPorAgrupacion_Result> SP_BuscarPaquetesPorAgrupacion(string codigoAgrupacion)
        {
            var codigoAgrupacionParameter = codigoAgrupacion != null ?
                new ObjectParameter("CodigoAgrupacion", codigoAgrupacion) :
                new ObjectParameter("CodigoAgrupacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarPaquetesPorAgrupacion_Result>("SP_BuscarPaquetesPorAgrupacion", codigoAgrupacionParameter);
        }
    
        public virtual ObjectResult<SP_BuscarPaquetesPorUbicacion_Result> SP_BuscarPaquetesPorUbicacion(string codigoUbicacion)
        {
            var codigoUbicacionParameter = codigoUbicacion != null ?
                new ObjectParameter("CodigoUbicacion", codigoUbicacion) :
                new ObjectParameter("CodigoUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarPaquetesPorUbicacion_Result>("SP_BuscarPaquetesPorUbicacion", codigoUbicacionParameter);
        }
    
        public virtual ObjectResult<SP_BuscarSeccionPorCodigo_Result> SP_BuscarSeccionPorCodigo(string codSeccion)
        {
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarSeccionPorCodigo_Result>("SP_BuscarSeccionPorCodigo", codSeccionParameter);
        }
    
        public virtual ObjectResult<SP_BuscarStockArticuloEnUbicacion_Result> SP_BuscarStockArticuloEnUbicacion(string codigoArticulo, string codUbicacion)
        {
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var codUbicacionParameter = codUbicacion != null ?
                new ObjectParameter("CodUbicacion", codUbicacion) :
                new ObjectParameter("CodUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarStockArticuloEnUbicacion_Result>("SP_BuscarStockArticuloEnUbicacion", codigoArticuloParameter, codUbicacionParameter);
        }
    
        public virtual ObjectResult<SP_BuscarStockPorBarquilla_Result> SP_BuscarStockPorBarquilla(string codigoBarquilla)
        {
            var codigoBarquillaParameter = codigoBarquilla != null ?
                new ObjectParameter("CodigoBarquilla", codigoBarquilla) :
                new ObjectParameter("CodigoBarquilla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarStockPorBarquilla_Result>("SP_BuscarStockPorBarquilla", codigoBarquillaParameter);
        }
    
        public virtual ObjectResult<SP_BuscarStockPorContenedor_Result> SP_BuscarStockPorContenedor(string codigoEtiqueta)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarStockPorContenedor_Result>("SP_BuscarStockPorContenedor", codigoEtiquetaParameter);
        }
    
        public virtual ObjectResult<SP_BuscarStockPorOrdenFabricacion_Result> SP_BuscarStockPorOrdenFabricacion(Nullable<int> idOrden)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("IdOrden", idOrden) :
                new ObjectParameter("IdOrden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarStockPorOrdenFabricacion_Result>("SP_BuscarStockPorOrdenFabricacion", idOrdenParameter);
        }
    
        public virtual ObjectResult<SP_BuscarStockPorOrdenFabricacionOperacion_Result> SP_BuscarStockPorOrdenFabricacionOperacion(Nullable<int> idOperacion)
        {
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarStockPorOrdenFabricacionOperacion_Result>("SP_BuscarStockPorOrdenFabricacionOperacion", idOperacionParameter);
        }
    
        public virtual ObjectResult<SP_BuscarStockPorPrepaquete_Result> SP_BuscarStockPorPrepaquete(string codigoPrepaquete)
        {
            var codigoPrepaqueteParameter = codigoPrepaquete != null ?
                new ObjectParameter("CodigoPrepaquete", codigoPrepaquete) :
                new ObjectParameter("CodigoPrepaquete", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarStockPorPrepaquete_Result>("SP_BuscarStockPorPrepaquete", codigoPrepaqueteParameter);
        }
    
        public virtual ObjectResult<SP_BuscarStockPorReferencia_Result> SP_BuscarStockPorReferencia(string codigoArticulo)
        {
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarStockPorReferencia_Result>("SP_BuscarStockPorReferencia", codigoArticuloParameter);
        }
    
        public virtual ObjectResult<SP_BuscarStockPorUbicacion_Result> SP_BuscarStockPorUbicacion(string codigoUbicacion)
        {
            var codigoUbicacionParameter = codigoUbicacion != null ?
                new ObjectParameter("CodigoUbicacion", codigoUbicacion) :
                new ObjectParameter("CodigoUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarStockPorUbicacion_Result>("SP_BuscarStockPorUbicacion", codigoUbicacionParameter);
        }
    
        public virtual ObjectResult<SP_BuscarStockTallasPorStock_Result> SP_BuscarStockTallasPorStock(Nullable<int> idStock)
        {
            var idStockParameter = idStock.HasValue ?
                new ObjectParameter("IdStock", idStock) :
                new ObjectParameter("IdStock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarStockTallasPorStock_Result>("SP_BuscarStockTallasPorStock", idStockParameter);
        }
    
        public virtual ObjectResult<SP_BuscarTodasMaquinas_Result> SP_BuscarTodasMaquinas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarTodasMaquinas_Result>("SP_BuscarTodasMaquinas");
        }
    
        public virtual ObjectResult<SP_BuscarTodasMaquinasEnSeccion_Result> SP_BuscarTodasMaquinasEnSeccion(string codSeccion)
        {
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarTodasMaquinasEnSeccion_Result>("SP_BuscarTodasMaquinasEnSeccion", codSeccionParameter);
        }
    
        public virtual ObjectResult<SP_BuscarTodasSecciones_Result> SP_BuscarTodasSecciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarTodasSecciones_Result>("SP_BuscarTodasSecciones");
        }
    
        public virtual ObjectResult<SP_BuscarTodosTalleres_Result> SP_BuscarTodosTalleres()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarTodosTalleres_Result>("SP_BuscarTodosTalleres");
        }
    
        public virtual ObjectResult<SP_BuscarUbicacionPorCodigo_Result> SP_BuscarUbicacionPorCodigo(string codigoUbicacion)
        {
            var codigoUbicacionParameter = codigoUbicacion != null ?
                new ObjectParameter("CodigoUbicacion", codigoUbicacion) :
                new ObjectParameter("CodigoUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BuscarUbicacionPorCodigo_Result>("SP_BuscarUbicacionPorCodigo", codigoUbicacionParameter);
        }
    
        public virtual int SP_CambiarDatosPedido(Nullable<int> pedido, Nullable<int> lineaPedido, string observacionesExpedicion, string sumodeloExpedicion)
        {
            var pedidoParameter = pedido.HasValue ?
                new ObjectParameter("Pedido", pedido) :
                new ObjectParameter("Pedido", typeof(int));
    
            var lineaPedidoParameter = lineaPedido.HasValue ?
                new ObjectParameter("LineaPedido", lineaPedido) :
                new ObjectParameter("LineaPedido", typeof(int));
    
            var observacionesExpedicionParameter = observacionesExpedicion != null ?
                new ObjectParameter("ObservacionesExpedicion", observacionesExpedicion) :
                new ObjectParameter("ObservacionesExpedicion", typeof(string));
    
            var sumodeloExpedicionParameter = sumodeloExpedicion != null ?
                new ObjectParameter("SumodeloExpedicion", sumodeloExpedicion) :
                new ObjectParameter("SumodeloExpedicion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CambiarDatosPedido", pedidoParameter, lineaPedidoParameter, observacionesExpedicionParameter, sumodeloExpedicionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ComprobarDepositos(string codigoArticulo, string codigoContenedor)
        {
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var codigoContenedorParameter = codigoContenedor != null ?
                new ObjectParameter("CodigoContenedor", codigoContenedor) :
                new ObjectParameter("CodigoContenedor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ComprobarDepositos", codigoArticuloParameter, codigoContenedorParameter);
        }
    
        public virtual ObjectResult<string> SP_ComprobarGrupoTallas(Nullable<int> codigoEmpresa, Nullable<int> numeroPedido, string lineaPosicion, string codigoArticulo)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var numeroPedidoParameter = numeroPedido.HasValue ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(int));
    
            var lineaPosicionParameter = lineaPosicion != null ?
                new ObjectParameter("LineaPosicion", lineaPosicion) :
                new ObjectParameter("LineaPosicion", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ComprobarGrupoTallas", codigoEmpresaParameter, numeroPedidoParameter, lineaPosicionParameter, codigoArticuloParameter);
        }
    
        public virtual ObjectResult<SP_ComprobarTallasArticuloUtillaje_Result> SP_ComprobarTallasArticuloUtillaje(Nullable<int> codigoEmpresa, string codigoArticulo, string codUtillaje)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var codUtillajeParameter = codUtillaje != null ?
                new ObjectParameter("CodUtillaje", codUtillaje) :
                new ObjectParameter("CodUtillaje", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ComprobarTallasArticuloUtillaje_Result>("SP_ComprobarTallasArticuloUtillaje", codigoEmpresaParameter, codigoArticuloParameter, codUtillajeParameter);
        }
    
        public virtual ObjectResult<SP_ConsultaArticulosAlmacen_Result> SP_ConsultaArticulosAlmacen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultaArticulosAlmacen_Result>("SP_ConsultaArticulosAlmacen");
        }
    
        public virtual ObjectResult<SP_ConsultaMovimientosMercancias_Result> SP_ConsultaMovimientosMercancias(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> codigoEmpresa)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultaMovimientosMercancias_Result>("SP_ConsultaMovimientosMercancias", fechaInicioParameter, fechaFinParameter, codigoEmpresaParameter);
        }
    
        public virtual ObjectResult<SP_ConsultaMovimientosMercanciasDetallado_Result> SP_ConsultaMovimientosMercanciasDetallado(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> codigoEmpresa)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultaMovimientosMercanciasDetallado_Result>("SP_ConsultaMovimientosMercanciasDetallado", fechaInicioParameter, fechaFinParameter, codigoEmpresaParameter);
        }
    
        public virtual ObjectResult<string> SP_ConsumirEnPuesto(Nullable<int> idTarea, Nullable<double> cantidad, Nullable<int> idMaquina)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(double));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ConsumirEnPuesto", idTareaParameter, cantidadParameter, idMaquinaParameter);
        }
    
        public virtual ObjectResult<SP_ConsumirEtiqueta_Result> SP_ConsumirEtiqueta(string codigoEtiqueta, string codigoMaquina, Nullable<int> idOperacionConsumir, Nullable<int> idOperario, ObjectParameter resultado, ObjectParameter error, ObjectParameter estadoFinal)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var codigoMaquinaParameter = codigoMaquina != null ?
                new ObjectParameter("CodigoMaquina", codigoMaquina) :
                new ObjectParameter("CodigoMaquina", typeof(string));
    
            var idOperacionConsumirParameter = idOperacionConsumir.HasValue ?
                new ObjectParameter("IdOperacionConsumir", idOperacionConsumir) :
                new ObjectParameter("IdOperacionConsumir", typeof(int));
    
            var idOperarioParameter = idOperario.HasValue ?
                new ObjectParameter("IdOperario", idOperario) :
                new ObjectParameter("IdOperario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsumirEtiqueta_Result>("SP_ConsumirEtiqueta", codigoEtiquetaParameter, codigoMaquinaParameter, idOperacionConsumirParameter, idOperarioParameter, resultado, error, estadoFinal);
        }
    
        public virtual ObjectResult<SP_ConsumirPLC_Result> SP_ConsumirPLC(string codigoEtiqueta, Nullable<int> idTarea, Nullable<int> pares, string ipAutomata, Nullable<int> posicion, Nullable<int> idOperacionConsumir, string codigoOrdenConsumir, Nullable<int> idOrdenConsumir, string tallaConsumir, string tallaUtillajeConsumir, Nullable<int> idObrero, Nullable<int> productividad)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            var paresParameter = pares.HasValue ?
                new ObjectParameter("Pares", pares) :
                new ObjectParameter("Pares", typeof(int));
    
            var ipAutomataParameter = ipAutomata != null ?
                new ObjectParameter("IpAutomata", ipAutomata) :
                new ObjectParameter("IpAutomata", typeof(string));
    
            var posicionParameter = posicion.HasValue ?
                new ObjectParameter("Posicion", posicion) :
                new ObjectParameter("Posicion", typeof(int));
    
            var idOperacionConsumirParameter = idOperacionConsumir.HasValue ?
                new ObjectParameter("IdOperacionConsumir", idOperacionConsumir) :
                new ObjectParameter("IdOperacionConsumir", typeof(int));
    
            var codigoOrdenConsumirParameter = codigoOrdenConsumir != null ?
                new ObjectParameter("CodigoOrdenConsumir", codigoOrdenConsumir) :
                new ObjectParameter("CodigoOrdenConsumir", typeof(string));
    
            var idOrdenConsumirParameter = idOrdenConsumir.HasValue ?
                new ObjectParameter("IdOrdenConsumir", idOrdenConsumir) :
                new ObjectParameter("IdOrdenConsumir", typeof(int));
    
            var tallaConsumirParameter = tallaConsumir != null ?
                new ObjectParameter("TallaConsumir", tallaConsumir) :
                new ObjectParameter("TallaConsumir", typeof(string));
    
            var tallaUtillajeConsumirParameter = tallaUtillajeConsumir != null ?
                new ObjectParameter("TallaUtillajeConsumir", tallaUtillajeConsumir) :
                new ObjectParameter("TallaUtillajeConsumir", typeof(string));
    
            var idObreroParameter = idObrero.HasValue ?
                new ObjectParameter("IdObrero", idObrero) :
                new ObjectParameter("IdObrero", typeof(int));
    
            var productividadParameter = productividad.HasValue ?
                new ObjectParameter("Productividad", productividad) :
                new ObjectParameter("Productividad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsumirPLC_Result>("SP_ConsumirPLC", codigoEtiquetaParameter, idTareaParameter, paresParameter, ipAutomataParameter, posicionParameter, idOperacionConsumirParameter, codigoOrdenConsumirParameter, idOrdenConsumirParameter, tallaConsumirParameter, tallaUtillajeConsumirParameter, idObreroParameter, productividadParameter);
        }
    
        public virtual int SP_CrearLiquidaciones(Nullable<int> codigoEmpresa, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CrearLiquidaciones", codigoEmpresaParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<SP_CrearPackinglist_Result> SP_CrearPackinglist(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CrearPackinglist_Result>("SP_CrearPackinglist", usuarioParameter);
        }
    
        public virtual ObjectResult<SP_CrearStock_Result> SP_CrearStock(string codigoArticulo, string codigoEtiqueta, string codigoUbicacion, Nullable<int> idTipoStock)
        {
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var codigoUbicacionParameter = codigoUbicacion != null ?
                new ObjectParameter("CodigoUbicacion", codigoUbicacion) :
                new ObjectParameter("CodigoUbicacion", typeof(string));
    
            var idTipoStockParameter = idTipoStock.HasValue ?
                new ObjectParameter("IdTipoStock", idTipoStock) :
                new ObjectParameter("IdTipoStock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CrearStock_Result>("SP_CrearStock", codigoArticuloParameter, codigoEtiquetaParameter, codigoUbicacionParameter, idTipoStockParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_DesconsumirEtiqueta(string codigoEtiqueta, Nullable<int> idOperacion, ObjectParameter resultado, ObjectParameter error)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DesconsumirEtiqueta", codigoEtiquetaParameter, idOperacionParameter, resultado, error);
        }
    
        public virtual int SP_DesconsumirEtiquetas(string codigosEtiquetas, Nullable<int> idMaquina, ObjectParameter resultado, ObjectParameter error)
        {
            var codigosEtiquetasParameter = codigosEtiquetas != null ?
                new ObjectParameter("CodigosEtiquetas", codigosEtiquetas) :
                new ObjectParameter("CodigosEtiquetas", typeof(string));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DesconsumirEtiquetas", codigosEtiquetasParameter, idMaquinaParameter, resultado, error);
        }
    
        public virtual int SP_DesprogramarTareaPC(Nullable<int> idTarea, Nullable<int> idMaquina, ObjectParameter resultado, ObjectParameter error)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DesprogramarTareaPC", idTareaParameter, idMaquinaParameter, resultado, error);
        }
    
        public virtual int SP_DesprogramarTareaPDA(Nullable<int> idTarea, Nullable<int> idMaquina, ObjectParameter resultado, ObjectParameter error)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DesprogramarTareaPDA", idTareaParameter, idMaquinaParameter, resultado, error);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<string> SP_DuplicarTareaMaquina(Nullable<int> tareaID, Nullable<int> nuevaCantidad, Nullable<int> saldos)
        {
            var tareaIDParameter = tareaID.HasValue ?
                new ObjectParameter("TareaID", tareaID) :
                new ObjectParameter("TareaID", typeof(int));
    
            var nuevaCantidadParameter = nuevaCantidad.HasValue ?
                new ObjectParameter("NuevaCantidad", nuevaCantidad) :
                new ObjectParameter("NuevaCantidad", typeof(int));
    
            var saldosParameter = saldos.HasValue ?
                new ObjectParameter("Saldos", saldos) :
                new ObjectParameter("Saldos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DuplicarTareaMaquina", tareaIDParameter, nuevaCantidadParameter, saldosParameter);
        }
    
        public virtual int SP_Eliminar_Articulo_ByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Eliminar_Articulo_ByID", iDParameter);
        }
    
        public virtual int SP_Eliminar_Articulo_ByReferencia(string referencia)
        {
            var referenciaParameter = referencia != null ?
                new ObjectParameter("Referencia", referencia) :
                new ObjectParameter("Referencia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Eliminar_Articulo_ByReferencia", referenciaParameter);
        }
    
        public virtual ObjectResult<string> SP_EliminarLiquidaciones(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_EliminarLiquidaciones", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_EnviarBarquillaTaller(Nullable<int> idTaller, string codBarquilla, string seccion)
        {
            var idTallerParameter = idTaller.HasValue ?
                new ObjectParameter("IdTaller", idTaller) :
                new ObjectParameter("IdTaller", typeof(int));
    
            var codBarquillaParameter = codBarquilla != null ?
                new ObjectParameter("CodBarquilla", codBarquilla) :
                new ObjectParameter("CodBarquilla", typeof(string));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_EnviarBarquillaTaller", idTallerParameter, codBarquillaParameter, seccionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_EnviarPrepaqueteTaller(Nullable<int> idTaller, string codPrepaquete, string seccion)
        {
            var idTallerParameter = idTaller.HasValue ?
                new ObjectParameter("IdTaller", idTaller) :
                new ObjectParameter("IdTaller", typeof(int));
    
            var codPrepaqueteParameter = codPrepaquete != null ?
                new ObjectParameter("CodPrepaquete", codPrepaquete) :
                new ObjectParameter("CodPrepaquete", typeof(string));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_EnviarPrepaqueteTaller", idTallerParameter, codPrepaqueteParameter, seccionParameter);
        }
    
        public virtual ObjectResult<SP_EtiquetaDatosCabecera_Result> SP_EtiquetaDatosCabecera(Nullable<int> empresa, string ordenFabricacion, Nullable<int> revision)
        {
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(int));
    
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EtiquetaDatosCabecera_Result>("SP_EtiquetaDatosCabecera", empresaParameter, ordenFabricacionParameter, revisionParameter);
        }
    
        public virtual ObjectResult<SP_EtiquetaDetalleOperacion_Result> SP_EtiquetaDetalleOperacion(string ordenFabricacion, string codUtillaje, string numeroOperacion, Nullable<int> revision)
        {
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var codUtillajeParameter = codUtillaje != null ?
                new ObjectParameter("CodUtillaje", codUtillaje) :
                new ObjectParameter("CodUtillaje", typeof(string));
    
            var numeroOperacionParameter = numeroOperacion != null ?
                new ObjectParameter("NumeroOperacion", numeroOperacion) :
                new ObjectParameter("NumeroOperacion", typeof(string));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EtiquetaDetalleOperacion_Result>("SP_EtiquetaDetalleOperacion", ordenFabricacionParameter, codUtillajeParameter, numeroOperacionParameter, revisionParameter);
        }
    
        public virtual ObjectResult<string> SP_EtiquetaListaMateriales(string ordenFabricacion, Nullable<int> revision)
        {
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_EtiquetaListaMateriales", ordenFabricacionParameter, revisionParameter);
        }
    
        public virtual ObjectResult<SP_EtiquetaListaOperaciones_Result> SP_EtiquetaListaOperaciones(string ordenFabricacion, string talla, Nullable<int> revision)
        {
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EtiquetaListaOperaciones_Result>("SP_EtiquetaListaOperaciones", ordenFabricacionParameter, tallaParameter, revisionParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> SP_EtiquetaTotalTalla(string ordenFabricacion, string talla, Nullable<int> revision)
        {
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("SP_EtiquetaTotalTalla", ordenFabricacionParameter, tallaParameter, revisionParameter);
        }
    
        public virtual ObjectResult<SP_ExcelAtrasadosSecciones_Result> SP_ExcelAtrasadosSecciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ExcelAtrasadosSecciones_Result>("SP_ExcelAtrasadosSecciones");
        }
    
        public virtual ObjectResult<SP_ExcelProduccion_Result> SP_ExcelProduccion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ExcelProduccion_Result>("SP_ExcelProduccion");
        }
    
        public virtual ObjectResult<SP_ExcelProduccionTotal_Result> SP_ExcelProduccionTotal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ExcelProduccionTotal_Result>("SP_ExcelProduccionTotal");
        }
    
        public virtual ObjectResult<string> SP_GenerarCodigoEtiquetas(Nullable<int> tipoCodigo, string usuario)
        {
            var tipoCodigoParameter = tipoCodigo.HasValue ?
                new ObjectParameter("TipoCodigo", tipoCodigo) :
                new ObjectParameter("TipoCodigo", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GenerarCodigoEtiquetas", tipoCodigoParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<SP_GruposTallas_Result> SP_GruposTallas(Nullable<int> codigoEmpresa, string grupoTalla)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var grupoTallaParameter = grupoTalla != null ?
                new ObjectParameter("GrupoTalla", grupoTalla) :
                new ObjectParameter("GrupoTalla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GruposTallas_Result>("SP_GruposTallas", codigoEmpresaParameter, grupoTallaParameter);
        }
    
        public virtual ObjectResult<SP_GuardarImpresionMarcajePorUtillajeTalla_Result> SP_GuardarImpresionMarcajePorUtillajeTalla(string codigoUtillaje, string talla, string impresionMarcaje1, string impresionMarcaje2, string impresionMarcaje3, string ficheroMarcaje)
        {
            var codigoUtillajeParameter = codigoUtillaje != null ?
                new ObjectParameter("CodigoUtillaje", codigoUtillaje) :
                new ObjectParameter("CodigoUtillaje", typeof(string));
    
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var impresionMarcaje1Parameter = impresionMarcaje1 != null ?
                new ObjectParameter("ImpresionMarcaje1", impresionMarcaje1) :
                new ObjectParameter("ImpresionMarcaje1", typeof(string));
    
            var impresionMarcaje2Parameter = impresionMarcaje2 != null ?
                new ObjectParameter("ImpresionMarcaje2", impresionMarcaje2) :
                new ObjectParameter("ImpresionMarcaje2", typeof(string));
    
            var impresionMarcaje3Parameter = impresionMarcaje3 != null ?
                new ObjectParameter("ImpresionMarcaje3", impresionMarcaje3) :
                new ObjectParameter("ImpresionMarcaje3", typeof(string));
    
            var ficheroMarcajeParameter = ficheroMarcaje != null ?
                new ObjectParameter("FicheroMarcaje", ficheroMarcaje) :
                new ObjectParameter("FicheroMarcaje", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GuardarImpresionMarcajePorUtillajeTalla_Result>("SP_GuardarImpresionMarcajePorUtillajeTalla", codigoUtillajeParameter, tallaParameter, impresionMarcaje1Parameter, impresionMarcaje2Parameter, impresionMarcaje3Parameter, ficheroMarcajeParameter);
        }
    
        public virtual int SP_GuardarTipoProceso(string tipoProceso, string descripcion)
        {
            var tipoProcesoParameter = tipoProceso != null ?
                new ObjectParameter("TipoProceso", tipoProceso) :
                new ObjectParameter("TipoProceso", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GuardarTipoProceso", tipoProcesoParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_IniciarTarea(Nullable<int> idTarea)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IniciarTarea", idTareaParameter);
        }
    
        public virtual ObjectResult<SP_InsertarContenedorPackinglist_Result> SP_InsertarContenedorPackinglist(Nullable<int> idPackinglist, string codigoEtiqueta)
        {
            var idPackinglistParameter = idPackinglist.HasValue ?
                new ObjectParameter("IdPackinglist", idPackinglist) :
                new ObjectParameter("IdPackinglist", typeof(int));
    
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_InsertarContenedorPackinglist_Result>("SP_InsertarContenedorPackinglist", idPackinglistParameter, codigoEtiquetaParameter);
        }
    
        public virtual ObjectResult<string> SP_InventarioPDA(string idsPaquetes)
        {
            var idsPaquetesParameter = idsPaquetes != null ?
                new ObjectParameter("IdsPaquetes", idsPaquetes) :
                new ObjectParameter("IdsPaquetes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_InventarioPDA", idsPaquetesParameter);
        }
    
        public virtual ObjectResult<SP_ListadoConsumosInternos_Result> SP_ListadoConsumosInternos(string partida, string lote, string codigoArticulo, Nullable<System.DateTime> fechaCreacion, Nullable<int> codigoEmpresa)
        {
            var partidaParameter = partida != null ?
                new ObjectParameter("Partida", partida) :
                new ObjectParameter("Partida", typeof(string));
    
            var loteParameter = lote != null ?
                new ObjectParameter("Lote", lote) :
                new ObjectParameter("Lote", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoConsumosInternos_Result>("SP_ListadoConsumosInternos", partidaParameter, loteParameter, codigoArticuloParameter, fechaCreacionParameter, codigoEmpresaParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlCajasLeidas_Result> SP_ListadoControlCajasLeidas(Nullable<System.DateTime> fecha, string seccion)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlCajasLeidas_Result>("SP_ListadoControlCajasLeidas", fechaParameter, seccionParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlCajasLeidasCorteOperarioTurno_Result> SP_ListadoControlCajasLeidasCorteOperarioTurno(Nullable<System.DateTime> fecha, string codigoOperario)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var codigoOperarioParameter = codigoOperario != null ?
                new ObjectParameter("CodigoOperario", codigoOperario) :
                new ObjectParameter("CodigoOperario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlCajasLeidasCorteOperarioTurno_Result>("SP_ListadoControlCajasLeidasCorteOperarioTurno", fechaParameter, codigoOperarioParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlCajasLeidasOperarioTurno_Result> SP_ListadoControlCajasLeidasOperarioTurno(Nullable<System.DateTime> fecha, string seccion, string codigoOperario)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            var codigoOperarioParameter = codigoOperario != null ?
                new ObjectParameter("CodigoOperario", codigoOperario) :
                new ObjectParameter("CodigoOperario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlCajasLeidasOperarioTurno_Result>("SP_ListadoControlCajasLeidasOperarioTurno", fechaParameter, seccionParameter, codigoOperarioParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlCajasLeidasPorOrdenes_Result> SP_ListadoControlCajasLeidasPorOrdenes(Nullable<System.DateTime> fecha, string seccion)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlCajasLeidasPorOrdenes_Result>("SP_ListadoControlCajasLeidasPorOrdenes", fechaParameter, seccionParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlCajasLeidasSeccion_Result> SP_ListadoControlCajasLeidasSeccion(Nullable<System.DateTime> fecha, string seccion)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlCajasLeidasSeccion_Result>("SP_ListadoControlCajasLeidasSeccion", fechaParameter, seccionParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlCajasLeidasTurno_Result> SP_ListadoControlCajasLeidasTurno(Nullable<System.DateTime> fecha, string seccion)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlCajasLeidasTurno_Result>("SP_ListadoControlCajasLeidasTurno", fechaParameter, seccionParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlCajasLeidasTurnoGenerico_Result> SP_ListadoControlCajasLeidasTurnoGenerico(Nullable<System.DateTime> fecha, string seccion)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlCajasLeidasTurnoGenerico_Result>("SP_ListadoControlCajasLeidasTurnoGenerico", fechaParameter, seccionParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlConsumosInternos_Result> SP_ListadoControlConsumosInternos(Nullable<System.DateTime> fecha, string usuario)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlConsumosInternos_Result>("SP_ListadoControlConsumosInternos", fechaParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlDepositos_Result> SP_ListadoControlDepositos(Nullable<System.DateTime> fecha, string persona)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var personaParameter = persona != null ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlDepositos_Result>("SP_ListadoControlDepositos", fechaParameter, personaParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlDinamicidad_Result> SP_ListadoControlDinamicidad(Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, string seccion1, string seccion2)
        {
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            var seccion1Parameter = seccion1 != null ?
                new ObjectParameter("seccion1", seccion1) :
                new ObjectParameter("seccion1", typeof(string));
    
            var seccion2Parameter = seccion2 != null ?
                new ObjectParameter("seccion2", seccion2) :
                new ObjectParameter("seccion2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlDinamicidad_Result>("SP_ListadoControlDinamicidad", fecha1Parameter, fecha2Parameter, seccion1Parameter, seccion2Parameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlEmpleadosImpresiones_Result> SP_ListadoControlEmpleadosImpresiones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlEmpleadosImpresiones_Result>("SP_ListadoControlEmpleadosImpresiones");
        }
    
        public virtual ObjectResult<SP_ListadoControlEntradas_Result> SP_ListadoControlEntradas(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlEntradas_Result>("SP_ListadoControlEntradas", fechaParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlEntradasSage_Result> SP_ListadoControlEntradasSage(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlEntradasSage_Result>("SP_ListadoControlEntradasSage", fechaParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlMovimientosArticulos_Result> SP_ListadoControlMovimientosArticulos(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlMovimientosArticulos_Result>("SP_ListadoControlMovimientosArticulos", fechaParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlMovimientosUbicacion_Result> SP_ListadoControlMovimientosUbicacion(string ubicacion)
        {
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("Ubicacion", ubicacion) :
                new ObjectParameter("Ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlMovimientosUbicacion_Result>("SP_ListadoControlMovimientosUbicacion", ubicacionParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlParesFabricados_Result> SP_ListadoControlParesFabricados(Nullable<System.DateTime> fecha, string seccion)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlParesFabricados_Result>("SP_ListadoControlParesFabricados", fechaParameter, seccionParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlParesFabricadosTurnoGenerico_Result> SP_ListadoControlParesFabricadosTurnoGenerico(Nullable<System.DateTime> fecha, string seccion)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlParesFabricadosTurnoGenerico_Result>("SP_ListadoControlParesFabricadosTurnoGenerico", fechaParameter, seccionParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlProductoTerminadoPendienteEnvio_Result> SP_ListadoControlProductoTerminadoPendienteEnvio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlProductoTerminadoPendienteEnvio_Result>("SP_ListadoControlProductoTerminadoPendienteEnvio");
        }
    
        public virtual ObjectResult<SP_ListadoControlSobras_Result> SP_ListadoControlSobras(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlSobras_Result>("SP_ListadoControlSobras", fechaParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlSobrasIndividualRango_Result> SP_ListadoControlSobrasIndividualRango(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlSobrasIndividualRango_Result>("SP_ListadoControlSobrasIndividualRango", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlSobrasObsoletas_Result> SP_ListadoControlSobrasObsoletas(Nullable<int> meses)
        {
            var mesesParameter = meses.HasValue ?
                new ObjectParameter("meses", meses) :
                new ObjectParameter("meses", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlSobrasObsoletas_Result>("SP_ListadoControlSobrasObsoletas", mesesParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlTodasCajasLeidasOrden_Result> SP_ListadoControlTodasCajasLeidasOrden(Nullable<System.DateTime> fecha, string seccion, string codigoOF)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            var codigoOFParameter = codigoOF != null ?
                new ObjectParameter("CodigoOF", codigoOF) :
                new ObjectParameter("CodigoOF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlTodasCajasLeidasOrden_Result>("SP_ListadoControlTodasCajasLeidasOrden", fechaParameter, seccionParameter, codigoOFParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlVentasArneplant_Result> SP_ListadoControlVentasArneplant(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlVentasArneplant_Result>("SP_ListadoControlVentasArneplant", fechaParameter);
        }
    
        public virtual ObjectResult<SP_ListadoControlVentasSage_Result> SP_ListadoControlVentasSage(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoControlVentasSage_Result>("SP_ListadoControlVentasSage", fechaParameter);
        }
    
        public virtual ObjectResult<SP_ListadoDetalladoFichajesCorteAutomatico_Result> SP_ListadoDetalladoFichajesCorteAutomatico(Nullable<System.DateTime> fecha, Nullable<int> dIASMEDIA)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var dIASMEDIAParameter = dIASMEDIA.HasValue ?
                new ObjectParameter("DIASMEDIA", dIASMEDIA) :
                new ObjectParameter("DIASMEDIA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoDetalladoFichajesCorteAutomatico_Result>("SP_ListadoDetalladoFichajesCorteAutomatico", fechaParameter, dIASMEDIAParameter);
        }
    
        public virtual ObjectResult<SP_ListadoEntradaMercancias_Result> SP_ListadoEntradaMercancias(string partida, string lote, string codigoArticulo, Nullable<System.DateTime> fechaRecepcion, Nullable<int> codigoEmpresa, string albaranProveedor, Nullable<bool> acabadas)
        {
            var partidaParameter = partida != null ?
                new ObjectParameter("Partida", partida) :
                new ObjectParameter("Partida", typeof(string));
    
            var loteParameter = lote != null ?
                new ObjectParameter("Lote", lote) :
                new ObjectParameter("Lote", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var fechaRecepcionParameter = fechaRecepcion.HasValue ?
                new ObjectParameter("FechaRecepcion", fechaRecepcion) :
                new ObjectParameter("FechaRecepcion", typeof(System.DateTime));
    
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var albaranProveedorParameter = albaranProveedor != null ?
                new ObjectParameter("AlbaranProveedor", albaranProveedor) :
                new ObjectParameter("AlbaranProveedor", typeof(string));
    
            var acabadasParameter = acabadas.HasValue ?
                new ObjectParameter("Acabadas", acabadas) :
                new ObjectParameter("Acabadas", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoEntradaMercancias_Result>("SP_ListadoEntradaMercancias", partidaParameter, loteParameter, codigoArticuloParameter, fechaRecepcionParameter, codigoEmpresaParameter, albaranProveedorParameter, acabadasParameter);
        }
    
        public virtual ObjectResult<SP_ListaPedidosPendientes_Result> SP_ListaPedidosPendientes(Nullable<int> codigoEmpresa, Nullable<int> numeroPedido, string nombreCliente, string codigoArticulo, Nullable<int> lineaOrden, Nullable<bool> noFabricar)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var numeroPedidoParameter = numeroPedido.HasValue ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(int));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var lineaOrdenParameter = lineaOrden.HasValue ?
                new ObjectParameter("LineaOrden", lineaOrden) :
                new ObjectParameter("LineaOrden", typeof(int));
    
            var noFabricarParameter = noFabricar.HasValue ?
                new ObjectParameter("NoFabricar", noFabricar) :
                new ObjectParameter("NoFabricar", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListaPedidosPendientes_Result>("SP_ListaPedidosPendientes", codigoEmpresaParameter, numeroPedidoParameter, nombreClienteParameter, codigoArticuloParameter, lineaOrdenParameter, noFabricarParameter);
        }
    
        public virtual ObjectResult<SP_ListaPedidosPlanificados_Result> SP_ListaPedidosPlanificados(Nullable<int> codigoEmpresa, Nullable<int> numeroPedido, string nombreCliente, string codigoArticulo, Nullable<int> lineaOrden, string ordenFabricacion)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var numeroPedidoParameter = numeroPedido.HasValue ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(int));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var lineaOrdenParameter = lineaOrden.HasValue ?
                new ObjectParameter("LineaOrden", lineaOrden) :
                new ObjectParameter("LineaOrden", typeof(int));
    
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListaPedidosPlanificados_Result>("SP_ListaPedidosPlanificados", codigoEmpresaParameter, numeroPedidoParameter, nombreClienteParameter, codigoArticuloParameter, lineaOrdenParameter, ordenFabricacionParameter);
        }
    
        public virtual ObjectResult<SP_ListarCambiosMolde_Result> SP_ListarCambiosMolde(string codSeccion)
        {
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListarCambiosMolde_Result>("SP_ListarCambiosMolde", codSeccionParameter);
        }
    
        public virtual ObjectResult<SP_MaquinaActualizarConfiguracionPines_Result> SP_MaquinaActualizarConfiguracionPines(Nullable<int> idMaquina, Nullable<bool> esPulsoManual, Nullable<double> productoPorPulso, Nullable<bool> descontarAuto, Nullable<int> direccionPulso)
        {
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var esPulsoManualParameter = esPulsoManual.HasValue ?
                new ObjectParameter("EsPulsoManual", esPulsoManual) :
                new ObjectParameter("EsPulsoManual", typeof(bool));
    
            var productoPorPulsoParameter = productoPorPulso.HasValue ?
                new ObjectParameter("ProductoPorPulso", productoPorPulso) :
                new ObjectParameter("ProductoPorPulso", typeof(double));
    
            var descontarAutoParameter = descontarAuto.HasValue ?
                new ObjectParameter("DescontarAuto", descontarAuto) :
                new ObjectParameter("DescontarAuto", typeof(bool));
    
            var direccionPulsoParameter = direccionPulso.HasValue ?
                new ObjectParameter("DireccionPulso", direccionPulso) :
                new ObjectParameter("DireccionPulso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinaActualizarConfiguracionPines_Result>("SP_MaquinaActualizarConfiguracionPines", idMaquinaParameter, esPulsoManualParameter, productoPorPulsoParameter, descontarAutoParameter, direccionPulsoParameter);
        }
    
        public virtual int SP_MaquinaAsociarAPuesto(Nullable<int> idMaquina, Nullable<int> idPuesto)
        {
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MaquinaAsociarAPuesto", idMaquinaParameter, idPuestoParameter);
        }
    
        public virtual ObjectResult<SP_MaquinaColaActualizarPosicion_Result> SP_MaquinaColaActualizarPosicion(Nullable<int> idTarea, Nullable<int> idMaquina, Nullable<int> posicion)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var posicionParameter = posicion.HasValue ?
                new ObjectParameter("Posicion", posicion) :
                new ObjectParameter("Posicion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinaColaActualizarPosicion_Result>("SP_MaquinaColaActualizarPosicion", idTareaParameter, idMaquinaParameter, posicionParameter);
        }
    
        public virtual ObjectResult<SP_MaquinaColaDesprogramarTarea_Result> SP_MaquinaColaDesprogramarTarea(Nullable<int> idTarea, Nullable<int> idMaquina)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinaColaDesprogramarTarea_Result>("SP_MaquinaColaDesprogramarTarea", idTareaParameter, idMaquinaParameter);
        }
    
        public virtual ObjectResult<SP_MaquinaColaEjecutarTarea_Result> SP_MaquinaColaEjecutarTarea(Nullable<int> idTarea, Nullable<int> idMaquina, Nullable<int> agrupacion, Nullable<int> idOperarioEjecucion)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var agrupacionParameter = agrupacion.HasValue ?
                new ObjectParameter("Agrupacion", agrupacion) :
                new ObjectParameter("Agrupacion", typeof(int));
    
            var idOperarioEjecucionParameter = idOperarioEjecucion.HasValue ?
                new ObjectParameter("IdOperarioEjecucion", idOperarioEjecucion) :
                new ObjectParameter("IdOperarioEjecucion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinaColaEjecutarTarea_Result>("SP_MaquinaColaEjecutarTarea", idTareaParameter, idMaquinaParameter, agrupacionParameter, idOperarioEjecucionParameter);
        }
    
        public virtual ObjectResult<SP_MaquinaColaObtenerTareaEjecucionPorId_Result> SP_MaquinaColaObtenerTareaEjecucionPorId(Nullable<int> idMaquina)
        {
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinaColaObtenerTareaEjecucionPorId_Result>("SP_MaquinaColaObtenerTareaEjecucionPorId", idMaquinaParameter);
        }
    
        public virtual ObjectResult<SP_MaquinaColaObtenerTareaEjecucionPorIpAutomataPosicion_Result> SP_MaquinaColaObtenerTareaEjecucionPorIpAutomataPosicion(string ipAutomata, Nullable<int> posicion)
        {
            var ipAutomataParameter = ipAutomata != null ?
                new ObjectParameter("IpAutomata", ipAutomata) :
                new ObjectParameter("IpAutomata", typeof(string));
    
            var posicionParameter = posicion.HasValue ?
                new ObjectParameter("Posicion", posicion) :
                new ObjectParameter("Posicion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinaColaObtenerTareaEjecucionPorIpAutomataPosicion_Result>("SP_MaquinaColaObtenerTareaEjecucionPorIpAutomataPosicion", ipAutomataParameter, posicionParameter);
        }
    
        public virtual ObjectResult<SP_MaquinaColaProgramarTarea_Result> SP_MaquinaColaProgramarTarea(Nullable<int> idTarea, Nullable<int> idMaquina, Nullable<int> agrupacion, Nullable<int> idOperarioPrograma, string codigoEtiqueta)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var agrupacionParameter = agrupacion.HasValue ?
                new ObjectParameter("Agrupacion", agrupacion) :
                new ObjectParameter("Agrupacion", typeof(int));
    
            var idOperarioProgramaParameter = idOperarioPrograma.HasValue ?
                new ObjectParameter("IdOperarioPrograma", idOperarioPrograma) :
                new ObjectParameter("IdOperarioPrograma", typeof(int));
    
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinaColaProgramarTarea_Result>("SP_MaquinaColaProgramarTarea", idTareaParameter, idMaquinaParameter, agrupacionParameter, idOperarioProgramaParameter, codigoEtiquetaParameter);
        }
    
        public virtual int SP_MaquinaDesasociarPuesto(Nullable<int> idPuesto)
        {
            var idPuestoParameter = idPuesto.HasValue ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MaquinaDesasociarPuesto", idPuestoParameter);
        }
    
        public virtual int SP_MaquinaRegistrarDato(string codigoEtiqueta, Nullable<int> idTarea, Nullable<int> productividad, string ipAutomata, Nullable<int> posicion, Nullable<int> idOperacion, string codigoOrden, Nullable<int> idOrden, string talla, string tallaUtillaje, Nullable<int> idOperario, Nullable<double> ciclo, Nullable<bool> piezaIntroducida, Nullable<int> pares, Nullable<int> year, Nullable<int> month, Nullable<int> day, Nullable<int> hour, Nullable<int> minutes, Nullable<int> seconds)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            var productividadParameter = productividad.HasValue ?
                new ObjectParameter("Productividad", productividad) :
                new ObjectParameter("Productividad", typeof(int));
    
            var ipAutomataParameter = ipAutomata != null ?
                new ObjectParameter("IpAutomata", ipAutomata) :
                new ObjectParameter("IpAutomata", typeof(string));
    
            var posicionParameter = posicion.HasValue ?
                new ObjectParameter("Posicion", posicion) :
                new ObjectParameter("Posicion", typeof(int));
    
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            var codigoOrdenParameter = codigoOrden != null ?
                new ObjectParameter("CodigoOrden", codigoOrden) :
                new ObjectParameter("CodigoOrden", typeof(string));
    
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("IdOrden", idOrden) :
                new ObjectParameter("IdOrden", typeof(int));
    
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var tallaUtillajeParameter = tallaUtillaje != null ?
                new ObjectParameter("TallaUtillaje", tallaUtillaje) :
                new ObjectParameter("TallaUtillaje", typeof(string));
    
            var idOperarioParameter = idOperario.HasValue ?
                new ObjectParameter("IdOperario", idOperario) :
                new ObjectParameter("IdOperario", typeof(int));
    
            var cicloParameter = ciclo.HasValue ?
                new ObjectParameter("Ciclo", ciclo) :
                new ObjectParameter("Ciclo", typeof(double));
    
            var piezaIntroducidaParameter = piezaIntroducida.HasValue ?
                new ObjectParameter("PiezaIntroducida", piezaIntroducida) :
                new ObjectParameter("PiezaIntroducida", typeof(bool));
    
            var paresParameter = pares.HasValue ?
                new ObjectParameter("Pares", pares) :
                new ObjectParameter("Pares", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(int));
    
            var hourParameter = hour.HasValue ?
                new ObjectParameter("Hour", hour) :
                new ObjectParameter("Hour", typeof(int));
    
            var minutesParameter = minutes.HasValue ?
                new ObjectParameter("Minutes", minutes) :
                new ObjectParameter("Minutes", typeof(int));
    
            var secondsParameter = seconds.HasValue ?
                new ObjectParameter("Seconds", seconds) :
                new ObjectParameter("Seconds", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MaquinaRegistrarDato", codigoEtiquetaParameter, idTareaParameter, productividadParameter, ipAutomataParameter, posicionParameter, idOperacionParameter, codigoOrdenParameter, idOrdenParameter, tallaParameter, tallaUtillajeParameter, idOperarioParameter, cicloParameter, piezaIntroducidaParameter, paresParameter, yearParameter, monthParameter, dayParameter, hourParameter, minutesParameter, secondsParameter);
        }
    
        public virtual ObjectResult<SP_MaquinaRegistrarHistoricoCiclo_Result> SP_MaquinaRegistrarHistoricoCiclo(Nullable<int> idMaquina, Nullable<double> ciclo)
        {
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var cicloParameter = ciclo.HasValue ?
                new ObjectParameter("Ciclo", ciclo) :
                new ObjectParameter("Ciclo", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinaRegistrarHistoricoCiclo_Result>("SP_MaquinaRegistrarHistoricoCiclo", idMaquinaParameter, cicloParameter);
        }
    
        public virtual ObjectResult<SP_MaquinasObtenerMoldes_Result> SP_MaquinasObtenerMoldes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinasObtenerMoldes_Result>("SP_MaquinasObtenerMoldes");
        }
    
        public virtual ObjectResult<SP_MaquinasObtenerPuestosIOT_Result> SP_MaquinasObtenerPuestosIOT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinasObtenerPuestosIOT_Result>("SP_MaquinasObtenerPuestosIOT");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_MaquinasUtillaje(string talla, string codSeccion, string codUtillaje, string codigosMateriales)
        {
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            var codUtillajeParameter = codUtillaje != null ?
                new ObjectParameter("CodUtillaje", codUtillaje) :
                new ObjectParameter("CodUtillaje", typeof(string));
    
            var codigosMaterialesParameter = codigosMateriales != null ?
                new ObjectParameter("CodigosMateriales", codigosMateriales) :
                new ObjectParameter("CodigosMateriales", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_MaquinasUtillaje", tallaParameter, codSeccionParameter, codUtillajeParameter, codigosMaterialesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_MaquinasUtillajeMolde(string talla, string codSeccion, string codUtillaje, string ciclo)
        {
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            var codUtillajeParameter = codUtillaje != null ?
                new ObjectParameter("CodUtillaje", codUtillaje) :
                new ObjectParameter("CodUtillaje", typeof(string));
    
            var cicloParameter = ciclo != null ?
                new ObjectParameter("Ciclo", ciclo) :
                new ObjectParameter("Ciclo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_MaquinasUtillajeMolde", tallaParameter, codSeccionParameter, codUtillajeParameter, cicloParameter);
        }
    
        public virtual ObjectResult<SP_MaquinaVerColaTrabajoPorCodigo_Result> SP_MaquinaVerColaTrabajoPorCodigo(string codigoEtiqueta)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinaVerColaTrabajoPorCodigo_Result>("SP_MaquinaVerColaTrabajoPorCodigo", codigoEtiquetaParameter);
        }
    
        public virtual ObjectResult<SP_MaquinaVerColaTrabajoPorId_Result> SP_MaquinaVerColaTrabajoPorId(Nullable<int> idMaquina)
        {
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaquinaVerColaTrabajoPorId_Result>("SP_MaquinaVerColaTrabajoPorId", idMaquinaParameter);
        }
    
        public virtual ObjectResult<SP_MaterialesObtenerReferencias_Result> SP_MaterialesObtenerReferencias(string codMateria)
        {
            var codMateriaParameter = codMateria != null ?
                new ObjectParameter("CodMateria", codMateria) :
                new ObjectParameter("CodMateria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MaterialesObtenerReferencias_Result>("SP_MaterialesObtenerReferencias", codMateriaParameter);
        }
    
        public virtual int SP_ModificarLiquidaciones(Nullable<int> codigoEmpresa, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ModificarLiquidaciones", codigoEmpresaParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<SP_MoldesActualizarPosicionUI_Result> SP_MoldesActualizarPosicionUI(Nullable<int> idMaquina, Nullable<double> uILeft, Nullable<double> uITop)
        {
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var uILeftParameter = uILeft.HasValue ?
                new ObjectParameter("UILeft", uILeft) :
                new ObjectParameter("UILeft", typeof(double));
    
            var uITopParameter = uITop.HasValue ?
                new ObjectParameter("UITop", uITop) :
                new ObjectParameter("UITop", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MoldesActualizarPosicionUI_Result>("SP_MoldesActualizarPosicionUI", idMaquinaParameter, uILeftParameter, uITopParameter);
        }
    
        public virtual ObjectResult<SP_MoldesObtenerBancadaPorId_Result> SP_MoldesObtenerBancadaPorId(Nullable<int> idBancada)
        {
            var idBancadaParameter = idBancada.HasValue ?
                new ObjectParameter("IdBancada", idBancada) :
                new ObjectParameter("IdBancada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MoldesObtenerBancadaPorId_Result>("SP_MoldesObtenerBancadaPorId", idBancadaParameter);
        }
    
        public virtual ObjectResult<SP_MoldesObtenerMaquinasPorIdBancada_Result> SP_MoldesObtenerMaquinasPorIdBancada(Nullable<int> idBancada)
        {
            var idBancadaParameter = idBancada.HasValue ?
                new ObjectParameter("IdBancada", idBancada) :
                new ObjectParameter("IdBancada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MoldesObtenerMaquinasPorIdBancada_Result>("SP_MoldesObtenerMaquinasPorIdBancada", idBancadaParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerAgentesSage_Result> SP_ObtenerAgentesSage(Nullable<int> codigoEmpresa, Nullable<int> codigoComisionista)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoComisionistaParameter = codigoComisionista.HasValue ?
                new ObjectParameter("CodigoComisionista", codigoComisionista) :
                new ObjectParameter("CodigoComisionista", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerAgentesSage_Result>("SP_ObtenerAgentesSage", codigoEmpresaParameter, codigoComisionistaParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerArticulosSage_Result> SP_ObtenerArticulosSage(Nullable<int> codigoEmpresa, string codigoArticulo, string descripcion)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerArticulosSage_Result>("SP_ObtenerArticulosSage", codigoEmpresaParameter, codigoArticuloParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerArticulosTallasSage_Result> SP_ObtenerArticulosTallasSage(Nullable<int> codigoEmpresa, string codigoArticulo, string nombreArticulo, string codigoFamilia, string codigoSubFamilia, string cliente)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var nombreArticuloParameter = nombreArticulo != null ?
                new ObjectParameter("NombreArticulo", nombreArticulo) :
                new ObjectParameter("NombreArticulo", typeof(string));
    
            var codigoFamiliaParameter = codigoFamilia != null ?
                new ObjectParameter("CodigoFamilia", codigoFamilia) :
                new ObjectParameter("CodigoFamilia", typeof(string));
    
            var codigoSubFamiliaParameter = codigoSubFamilia != null ?
                new ObjectParameter("CodigoSubFamilia", codigoSubFamilia) :
                new ObjectParameter("CodigoSubFamilia", typeof(string));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerArticulosTallasSage_Result>("SP_ObtenerArticulosTallasSage", codigoEmpresaParameter, codigoArticuloParameter, nombreArticuloParameter, codigoFamiliaParameter, codigoSubFamiliaParameter, clienteParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerCamposERP_Result> SP_ObtenerCamposERP(Nullable<int> codigoOF)
        {
            var codigoOFParameter = codigoOF.HasValue ?
                new ObjectParameter("CodigoOF", codigoOF) :
                new ObjectParameter("CodigoOF", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerCamposERP_Result>("SP_ObtenerCamposERP", codigoOFParameter);
        }
    
        public virtual int SP_ObtenerCantidadProducidaDeOFOTC(Nullable<int> oFOTCId, ObjectParameter consumida)
        {
            var oFOTCIdParameter = oFOTCId.HasValue ?
                new ObjectParameter("OFOTCId", oFOTCId) :
                new ObjectParameter("OFOTCId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ObtenerCantidadProducidaDeOFOTC", oFOTCIdParameter, consumida);
        }
    
        public virtual int SP_ObtenerCantidadProducidaEnOFOTCMaquina(Nullable<int> idOFOTC)
        {
            var idOFOTCParameter = idOFOTC.HasValue ?
                new ObjectParameter("IdOFOTC", idOFOTC) :
                new ObjectParameter("IdOFOTC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ObtenerCantidadProducidaEnOFOTCMaquina", idOFOTCParameter);
        }
    
        public virtual ObjectResult<string> SP_ObtenerClienteSage(Nullable<int> codigoEmpresa, string codigoCliente)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoClienteParameter = codigoCliente != null ?
                new ObjectParameter("CodigoCliente", codigoCliente) :
                new ObjectParameter("CodigoCliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ObtenerClienteSage", codigoEmpresaParameter, codigoClienteParameter);
        }
    
        public virtual ObjectResult<string> SP_ObtenerClientesAgente(Nullable<int> codigoEmpresa, Nullable<int> codigoAgente)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoAgenteParameter = codigoAgente.HasValue ?
                new ObjectParameter("CodigoAgente", codigoAgente) :
                new ObjectParameter("CodigoAgente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ObtenerClientesAgente", codigoEmpresaParameter, codigoAgenteParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerClientesDirecciones_Result> SP_ObtenerClientesDirecciones(Nullable<int> codigoEmpresa, string razonSocial)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerClientesDirecciones_Result>("SP_ObtenerClientesDirecciones", codigoEmpresaParameter, razonSocialParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerClientesDireccionesFiscales_Result> SP_ObtenerClientesDireccionesFiscales(Nullable<int> codigoEmpresa, string razonSocial)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerClientesDireccionesFiscales_Result>("SP_ObtenerClientesDireccionesFiscales", codigoEmpresaParameter, razonSocialParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerClientesSage_Result> SP_ObtenerClientesSage(Nullable<int> codigoEmpresa, string codigoCliente, string nombreCliente)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoClienteParameter = codigoCliente != null ?
                new ObjectParameter("CodigoCliente", codigoCliente) :
                new ObjectParameter("CodigoCliente", typeof(string));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerClientesSage_Result>("SP_ObtenerClientesSage", codigoEmpresaParameter, codigoClienteParameter, nombreClienteParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerCriteriosLiquidacion_Result> SP_ObtenerCriteriosLiquidacion(Nullable<int> codigoEmpresa, Nullable<System.DateTime> fecha, string codigoArticulo, string codigoCliente, string codigoFamilia, string codigoSubFamilia, Nullable<int> codigoAgente)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var codigoClienteParameter = codigoCliente != null ?
                new ObjectParameter("CodigoCliente", codigoCliente) :
                new ObjectParameter("CodigoCliente", typeof(string));
    
            var codigoFamiliaParameter = codigoFamilia != null ?
                new ObjectParameter("CodigoFamilia", codigoFamilia) :
                new ObjectParameter("CodigoFamilia", typeof(string));
    
            var codigoSubFamiliaParameter = codigoSubFamilia != null ?
                new ObjectParameter("CodigoSubFamilia", codigoSubFamilia) :
                new ObjectParameter("CodigoSubFamilia", typeof(string));
    
            var codigoAgenteParameter = codigoAgente.HasValue ?
                new ObjectParameter("CodigoAgente", codigoAgente) :
                new ObjectParameter("CodigoAgente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerCriteriosLiquidacion_Result>("SP_ObtenerCriteriosLiquidacion", codigoEmpresaParameter, fechaParameter, codigoArticuloParameter, codigoClienteParameter, codigoFamiliaParameter, codigoSubFamiliaParameter, codigoAgenteParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerDatoLineasAlbaranCliente_Result> SP_ObtenerDatoLineasAlbaranCliente(Nullable<int> codigoEmpresa, Nullable<short> ejercicioAlbaran, string serieAlbaran, Nullable<int> numeroAlbaran, Nullable<short> orden, Nullable<System.Guid> lineasPosicion)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var ejercicioAlbaranParameter = ejercicioAlbaran.HasValue ?
                new ObjectParameter("EjercicioAlbaran", ejercicioAlbaran) :
                new ObjectParameter("EjercicioAlbaran", typeof(short));
    
            var serieAlbaranParameter = serieAlbaran != null ?
                new ObjectParameter("SerieAlbaran", serieAlbaran) :
                new ObjectParameter("SerieAlbaran", typeof(string));
    
            var numeroAlbaranParameter = numeroAlbaran.HasValue ?
                new ObjectParameter("NumeroAlbaran", numeroAlbaran) :
                new ObjectParameter("NumeroAlbaran", typeof(int));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(short));
    
            var lineasPosicionParameter = lineasPosicion.HasValue ?
                new ObjectParameter("LineasPosicion", lineasPosicion) :
                new ObjectParameter("LineasPosicion", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerDatoLineasAlbaranCliente_Result>("SP_ObtenerDatoLineasAlbaranCliente", codigoEmpresaParameter, ejercicioAlbaranParameter, serieAlbaranParameter, numeroAlbaranParameter, ordenParameter, lineasPosicionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerDatoLineasAlbaranProveedorMateriales_Result> SP_ObtenerDatoLineasAlbaranProveedorMateriales(Nullable<int> codigoEmpresa, string codigoProveedor, Nullable<int> factura, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string codigoArticulo, Nullable<int> numeroOrigen, Nullable<int> lineaOrigen)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoProveedorParameter = codigoProveedor != null ?
                new ObjectParameter("CodigoProveedor", codigoProveedor) :
                new ObjectParameter("CodigoProveedor", typeof(string));
    
            var facturaParameter = factura.HasValue ?
                new ObjectParameter("Factura", factura) :
                new ObjectParameter("Factura", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var numeroOrigenParameter = numeroOrigen.HasValue ?
                new ObjectParameter("NumeroOrigen", numeroOrigen) :
                new ObjectParameter("NumeroOrigen", typeof(int));
    
            var lineaOrigenParameter = lineaOrigen.HasValue ?
                new ObjectParameter("LineaOrigen", lineaOrigen) :
                new ObjectParameter("LineaOrigen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerDatoLineasAlbaranProveedorMateriales_Result>("SP_ObtenerDatoLineasAlbaranProveedorMateriales", codigoEmpresaParameter, codigoProveedorParameter, facturaParameter, fechaInicioParameter, fechaFinParameter, codigoArticuloParameter, numeroOrigenParameter, lineaOrigenParameter);
        }
    
        public virtual ObjectResult<string> SP_ObtenerDescripcionArticulo(string codigoArticulo)
        {
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ObtenerDescripcionArticulo", codigoArticuloParameter);
        }
    
        public virtual int SP_ObtenerDetalleTareasMaquina(Nullable<int> idOFOTC, string contenedorCodigoBarras)
        {
            var idOFOTCParameter = idOFOTC.HasValue ?
                new ObjectParameter("IdOFOTC", idOFOTC) :
                new ObjectParameter("IdOFOTC", typeof(int));
    
            var contenedorCodigoBarrasParameter = contenedorCodigoBarras != null ?
                new ObjectParameter("ContenedorCodigoBarras", contenedorCodigoBarras) :
                new ObjectParameter("ContenedorCodigoBarras", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ObtenerDetalleTareasMaquina", idOFOTCParameter, contenedorCodigoBarrasParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> SP_ObtenerDuracionOrden(string ordenFabricacion, Nullable<int> revision)
        {
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("SP_ObtenerDuracionOrden", ordenFabricacionParameter, revisionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerEstadoTareasOrdenFabricacion_Result> SP_ObtenerEstadoTareasOrdenFabricacion(string ordenFabricacionCodigo, Nullable<int> revision)
        {
            var ordenFabricacionCodigoParameter = ordenFabricacionCodigo != null ?
                new ObjectParameter("OrdenFabricacionCodigo", ordenFabricacionCodigo) :
                new ObjectParameter("OrdenFabricacionCodigo", typeof(string));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerEstadoTareasOrdenFabricacion_Result>("SP_ObtenerEstadoTareasOrdenFabricacion", ordenFabricacionCodigoParameter, revisionParameter);
        }
    
        public virtual ObjectResult<string> SP_ObtenerFamiliasSage(Nullable<int> codigoEmpresa)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ObtenerFamiliasSage", codigoEmpresaParameter);
        }
    
        public virtual int SP_ObtenerFinTareaMaterialesMaquinasSinCont(Nullable<int> idOFOTC)
        {
            var idOFOTCParameter = idOFOTC.HasValue ?
                new ObjectParameter("IdOFOTC", idOFOTC) :
                new ObjectParameter("IdOFOTC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ObtenerFinTareaMaterialesMaquinasSinCont", idOFOTCParameter);
        }
    
        public virtual int SP_ObtenerFinTareaProcesosMaquina(Nullable<int> idOFOTC)
        {
            var idOFOTCParameter = idOFOTC.HasValue ?
                new ObjectParameter("IdOFOTC", idOFOTC) :
                new ObjectParameter("IdOFOTC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ObtenerFinTareaProcesosMaquina", idOFOTCParameter);
        }
    
        public virtual int SP_ObtenerFinTareasMaquina(string contenedorCodigoBarras)
        {
            var contenedorCodigoBarrasParameter = contenedorCodigoBarras != null ?
                new ObjectParameter("ContenedorCodigoBarras", contenedorCodigoBarras) :
                new ObjectParameter("ContenedorCodigoBarras", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ObtenerFinTareasMaquina", contenedorCodigoBarrasParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerInformeFaltasModelo_Result> SP_ObtenerInformeFaltasModelo(string modelo, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerInformeFaltasModelo_Result>("SP_ObtenerInformeFaltasModelo", modeloParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerLineasAlbaranCliente_Result> SP_ObtenerLineasAlbaranCliente(Nullable<int> codigoEmpresa, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string codigoArticulo, string codigoCliente, string codigoFamilia, string codigoSubFamilia)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var codigoClienteParameter = codigoCliente != null ?
                new ObjectParameter("CodigoCliente", codigoCliente) :
                new ObjectParameter("CodigoCliente", typeof(string));
    
            var codigoFamiliaParameter = codigoFamilia != null ?
                new ObjectParameter("CodigoFamilia", codigoFamilia) :
                new ObjectParameter("CodigoFamilia", typeof(string));
    
            var codigoSubFamiliaParameter = codigoSubFamilia != null ?
                new ObjectParameter("CodigoSubFamilia", codigoSubFamilia) :
                new ObjectParameter("CodigoSubFamilia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerLineasAlbaranCliente_Result>("SP_ObtenerLineasAlbaranCliente", codigoEmpresaParameter, fechaInicioParameter, fechaFinParameter, codigoArticuloParameter, codigoClienteParameter, codigoFamiliaParameter, codigoSubFamiliaParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerLineasAlbaranProveedor_Result> SP_ObtenerLineasAlbaranProveedor(Nullable<int> codigoEmpresa, string tipoArticulo, string codigoDelProveedor, Nullable<System.Guid> lineaPedido, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string codigoArticulo)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var tipoArticuloParameter = tipoArticulo != null ?
                new ObjectParameter("TipoArticulo", tipoArticulo) :
                new ObjectParameter("TipoArticulo", typeof(string));
    
            var codigoDelProveedorParameter = codigoDelProveedor != null ?
                new ObjectParameter("CodigoDelProveedor", codigoDelProveedor) :
                new ObjectParameter("CodigoDelProveedor", typeof(string));
    
            var lineaPedidoParameter = lineaPedido.HasValue ?
                new ObjectParameter("LineaPedido", lineaPedido) :
                new ObjectParameter("LineaPedido", typeof(System.Guid));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerLineasAlbaranProveedor_Result>("SP_ObtenerLineasAlbaranProveedor", codigoEmpresaParameter, tipoArticuloParameter, codigoDelProveedorParameter, lineaPedidoParameter, fechaInicioParameter, fechaFinParameter, codigoArticuloParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerLineasAlbaranProveedorInmaterial_Result> SP_ObtenerLineasAlbaranProveedorInmaterial(Nullable<int> codigoEmpresa, string codigoProveedor, Nullable<int> factura, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string codigoArticulo)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoProveedorParameter = codigoProveedor != null ?
                new ObjectParameter("CodigoProveedor", codigoProveedor) :
                new ObjectParameter("CodigoProveedor", typeof(string));
    
            var facturaParameter = factura.HasValue ?
                new ObjectParameter("Factura", factura) :
                new ObjectParameter("Factura", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerLineasAlbaranProveedorInmaterial_Result>("SP_ObtenerLineasAlbaranProveedorInmaterial", codigoEmpresaParameter, codigoProveedorParameter, facturaParameter, fechaInicioParameter, fechaFinParameter, codigoArticuloParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerLineasAlbaranProveedorMateriales_Result> SP_ObtenerLineasAlbaranProveedorMateriales(Nullable<int> codigoEmpresa, string codigoProveedor, Nullable<int> factura, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string codigoArticulo, Nullable<int> numeroOrigen, Nullable<int> lineaOrigen, Nullable<System.DateTime> fechaInicioS, Nullable<System.DateTime> fechaFinS, string suFacturaNumero)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoProveedorParameter = codigoProveedor != null ?
                new ObjectParameter("CodigoProveedor", codigoProveedor) :
                new ObjectParameter("CodigoProveedor", typeof(string));
    
            var facturaParameter = factura.HasValue ?
                new ObjectParameter("Factura", factura) :
                new ObjectParameter("Factura", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var numeroOrigenParameter = numeroOrigen.HasValue ?
                new ObjectParameter("NumeroOrigen", numeroOrigen) :
                new ObjectParameter("NumeroOrigen", typeof(int));
    
            var lineaOrigenParameter = lineaOrigen.HasValue ?
                new ObjectParameter("LineaOrigen", lineaOrigen) :
                new ObjectParameter("LineaOrigen", typeof(int));
    
            var fechaInicioSParameter = fechaInicioS.HasValue ?
                new ObjectParameter("FechaInicioS", fechaInicioS) :
                new ObjectParameter("FechaInicioS", typeof(System.DateTime));
    
            var fechaFinSParameter = fechaFinS.HasValue ?
                new ObjectParameter("FechaFinS", fechaFinS) :
                new ObjectParameter("FechaFinS", typeof(System.DateTime));
    
            var suFacturaNumeroParameter = suFacturaNumero != null ?
                new ObjectParameter("SuFacturaNumero", suFacturaNumero) :
                new ObjectParameter("SuFacturaNumero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerLineasAlbaranProveedorMateriales_Result>("SP_ObtenerLineasAlbaranProveedorMateriales", codigoEmpresaParameter, codigoProveedorParameter, facturaParameter, fechaInicioParameter, fechaFinParameter, codigoArticuloParameter, numeroOrigenParameter, lineaOrigenParameter, fechaInicioSParameter, fechaFinSParameter, suFacturaNumeroParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerMaterialesTareasPendientesMaquina_Result> SP_ObtenerMaterialesTareasPendientesMaquina(Nullable<int> idOFTC)
        {
            var idOFTCParameter = idOFTC.HasValue ?
                new ObjectParameter("IdOFTC", idOFTC) :
                new ObjectParameter("IdOFTC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerMaterialesTareasPendientesMaquina_Result>("SP_ObtenerMaterialesTareasPendientesMaquina", idOFTCParameter);
        }
    
        public virtual ObjectResult<string> SP_ObtenerModeloArticulo(string codigoArticulo)
        {
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ObtenerModeloArticulo", codigoArticuloParameter);
        }
    
        public virtual int SP_ObtenerOFOTDeOFCYSeccion(Nullable<int> oFCId, Nullable<int> oFOId, ObjectParameter oFOTId)
        {
            var oFCIdParameter = oFCId.HasValue ?
                new ObjectParameter("OFCId", oFCId) :
                new ObjectParameter("OFCId", typeof(int));
    
            var oFOIdParameter = oFOId.HasValue ?
                new ObjectParameter("OFOId", oFOId) :
                new ObjectParameter("OFOId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ObtenerOFOTDeOFCYSeccion", oFCIdParameter, oFOIdParameter, oFOTId);
        }
    
        public virtual ObjectResult<SP_ObtenerOrdenesFabricacion_Result> SP_ObtenerOrdenesFabricacion(Nullable<int> codigoEmpresa, string codigo, string codigoArticulo, string nombreCliente, Nullable<int> idMaquina, string numeroPedido)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var numeroPedidoParameter = numeroPedido != null ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerOrdenesFabricacion_Result>("SP_ObtenerOrdenesFabricacion", codigoEmpresaParameter, codigoParameter, codigoArticuloParameter, nombreClienteParameter, idMaquinaParameter, numeroPedidoParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerOrdenesFabricacionFinalizadas_Result> SP_ObtenerOrdenesFabricacionFinalizadas(string talla, string ordenFabricacion, string codSeccion, string codigoArticulo, Nullable<int> idPedido, string codUtillaje, string codigosMateriales, Nullable<int> codigoEmpresa, string nombreCliente, string modelo, Nullable<int> tipoProceso)
        {
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            var codUtillajeParameter = codUtillaje != null ?
                new ObjectParameter("CodUtillaje", codUtillaje) :
                new ObjectParameter("CodUtillaje", typeof(string));
    
            var codigosMaterialesParameter = codigosMateriales != null ?
                new ObjectParameter("CodigosMateriales", codigosMateriales) :
                new ObjectParameter("CodigosMateriales", typeof(string));
    
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var tipoProcesoParameter = tipoProceso.HasValue ?
                new ObjectParameter("TipoProceso", tipoProceso) :
                new ObjectParameter("TipoProceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerOrdenesFabricacionFinalizadas_Result>("SP_ObtenerOrdenesFabricacionFinalizadas", tallaParameter, ordenFabricacionParameter, codSeccionParameter, codigoArticuloParameter, idPedidoParameter, codUtillajeParameter, codigosMaterialesParameter, codigoEmpresaParameter, nombreClienteParameter, modeloParameter, tipoProcesoParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerOrdenesFabricacionFinalizadasArbol_Result> SP_ObtenerOrdenesFabricacionFinalizadasArbol(Nullable<int> codigoEmpresa, string ordenFabricacion, string codigoArticulo, string nombreCliente, string modelo, Nullable<int> idPedido, Nullable<System.DateTime> fechaEntrega, Nullable<System.DateTime> fechaPedido, string codSeccion, string talla, string codUtillaje, string codigosMateriales, Nullable<int> tipoProceso, Nullable<System.DateTime> fechaFinalizado, Nullable<System.DateTime> fechaFinalizadoHasta)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            var fechaEntregaParameter = fechaEntrega.HasValue ?
                new ObjectParameter("FechaEntrega", fechaEntrega) :
                new ObjectParameter("FechaEntrega", typeof(System.DateTime));
    
            var fechaPedidoParameter = fechaPedido.HasValue ?
                new ObjectParameter("FechaPedido", fechaPedido) :
                new ObjectParameter("FechaPedido", typeof(System.DateTime));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var codUtillajeParameter = codUtillaje != null ?
                new ObjectParameter("CodUtillaje", codUtillaje) :
                new ObjectParameter("CodUtillaje", typeof(string));
    
            var codigosMaterialesParameter = codigosMateriales != null ?
                new ObjectParameter("CodigosMateriales", codigosMateriales) :
                new ObjectParameter("CodigosMateriales", typeof(string));
    
            var tipoProcesoParameter = tipoProceso.HasValue ?
                new ObjectParameter("TipoProceso", tipoProceso) :
                new ObjectParameter("TipoProceso", typeof(int));
    
            var fechaFinalizadoParameter = fechaFinalizado.HasValue ?
                new ObjectParameter("FechaFinalizado", fechaFinalizado) :
                new ObjectParameter("FechaFinalizado", typeof(System.DateTime));
    
            var fechaFinalizadoHastaParameter = fechaFinalizadoHasta.HasValue ?
                new ObjectParameter("FechaFinalizadoHasta", fechaFinalizadoHasta) :
                new ObjectParameter("FechaFinalizadoHasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerOrdenesFabricacionFinalizadasArbol_Result>("SP_ObtenerOrdenesFabricacionFinalizadasArbol", codigoEmpresaParameter, ordenFabricacionParameter, codigoArticuloParameter, nombreClienteParameter, modeloParameter, idPedidoParameter, fechaEntregaParameter, fechaPedidoParameter, codSeccionParameter, tallaParameter, codUtillajeParameter, codigosMaterialesParameter, tipoProcesoParameter, fechaFinalizadoParameter, fechaFinalizadoHastaParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerOrdenesFabricacionHistorico_Result> SP_ObtenerOrdenesFabricacionHistorico(Nullable<int> codigoEmpresa, Nullable<System.DateTime> fechaNecesaria, Nullable<int> numeroPedido, string ordenFabricacion)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var fechaNecesariaParameter = fechaNecesaria.HasValue ?
                new ObjectParameter("FechaNecesaria", fechaNecesaria) :
                new ObjectParameter("FechaNecesaria", typeof(System.DateTime));
    
            var numeroPedidoParameter = numeroPedido.HasValue ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(int));
    
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerOrdenesFabricacionHistorico_Result>("SP_ObtenerOrdenesFabricacionHistorico", codigoEmpresaParameter, fechaNecesariaParameter, numeroPedidoParameter, ordenFabricacionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerOrdenesFabricacionPendientes_Result> SP_ObtenerOrdenesFabricacionPendientes(string ordenFabricacion, Nullable<int> codigoEmpresa, Nullable<int> revision)
        {
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerOrdenesFabricacionPendientes_Result>("SP_ObtenerOrdenesFabricacionPendientes", ordenFabricacionParameter, codigoEmpresaParameter, revisionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerOrdenesFabricacionPendientesArbol_Result> SP_ObtenerOrdenesFabricacionPendientesArbol(Nullable<int> codigoEmpresa, string ordenFabricacion, string codigoArticulo, string nombreCliente, string modelo, Nullable<int> idPedido, Nullable<System.DateTime> fechaEntrega, Nullable<System.DateTime> fechaPedido, string codSeccion, string talla, string codUtillaje, string codigosMateriales, Nullable<int> tipoProceso)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            var fechaEntregaParameter = fechaEntrega.HasValue ?
                new ObjectParameter("FechaEntrega", fechaEntrega) :
                new ObjectParameter("FechaEntrega", typeof(System.DateTime));
    
            var fechaPedidoParameter = fechaPedido.HasValue ?
                new ObjectParameter("FechaPedido", fechaPedido) :
                new ObjectParameter("FechaPedido", typeof(System.DateTime));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var codUtillajeParameter = codUtillaje != null ?
                new ObjectParameter("CodUtillaje", codUtillaje) :
                new ObjectParameter("CodUtillaje", typeof(string));
    
            var codigosMaterialesParameter = codigosMateriales != null ?
                new ObjectParameter("CodigosMateriales", codigosMateriales) :
                new ObjectParameter("CodigosMateriales", typeof(string));
    
            var tipoProcesoParameter = tipoProceso.HasValue ?
                new ObjectParameter("TipoProceso", tipoProceso) :
                new ObjectParameter("TipoProceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerOrdenesFabricacionPendientesArbol_Result>("SP_ObtenerOrdenesFabricacionPendientesArbol", codigoEmpresaParameter, ordenFabricacionParameter, codigoArticuloParameter, nombreClienteParameter, modeloParameter, idPedidoParameter, fechaEntregaParameter, fechaPedidoParameter, codSeccionParameter, tallaParameter, codUtillajeParameter, codigosMaterialesParameter, tipoProcesoParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerOrdenesFabricacionPendientesMolde_Result> SP_ObtenerOrdenesFabricacionPendientesMolde(string talla, string ordenFabricacion, string codigoArticulo, Nullable<int> idPedido, string codUtillaje, Nullable<int> codigoEmpresa, string nombreCliente, string ciclo)
        {
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("IdPedido", idPedido) :
                new ObjectParameter("IdPedido", typeof(int));
    
            var codUtillajeParameter = codUtillaje != null ?
                new ObjectParameter("CodUtillaje", codUtillaje) :
                new ObjectParameter("CodUtillaje", typeof(string));
    
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var cicloParameter = ciclo != null ?
                new ObjectParameter("Ciclo", ciclo) :
                new ObjectParameter("Ciclo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerOrdenesFabricacionPendientesMolde_Result>("SP_ObtenerOrdenesFabricacionPendientesMolde", tallaParameter, ordenFabricacionParameter, codigoArticuloParameter, idPedidoParameter, codUtillajeParameter, codigoEmpresaParameter, nombreClienteParameter, cicloParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerPowerBI_Result> SP_ObtenerPowerBI(Nullable<int> iDUsuario)
        {
            var iDUsuarioParameter = iDUsuario.HasValue ?
                new ObjectParameter("IDUsuario", iDUsuario) :
                new ObjectParameter("IDUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerPowerBI_Result>("SP_ObtenerPowerBI", iDUsuarioParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerStockArticulo_Result> SP_ObtenerStockArticulo(Nullable<int> codigoEmpresa, string codigoArticulo, Nullable<int> ejercicio, Nullable<int> periodo)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var ejercicioParameter = ejercicio.HasValue ?
                new ObjectParameter("Ejercicio", ejercicio) :
                new ObjectParameter("Ejercicio", typeof(int));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerStockArticulo_Result>("SP_ObtenerStockArticulo", codigoEmpresaParameter, codigoArticuloParameter, ejercicioParameter, periodoParameter);
        }
    
        public virtual ObjectResult<string> SP_ObtenerSubFamiliasSage(Nullable<int> codigoEmpresa, string codigoFamilia)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoFamiliaParameter = codigoFamilia != null ?
                new ObjectParameter("CodigoFamilia", codigoFamilia) :
                new ObjectParameter("CodigoFamilia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ObtenerSubFamiliasSage", codigoEmpresaParameter, codigoFamiliaParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerTareaMolde_Result> SP_ObtenerTareaMolde(Nullable<int> tareaID, Nullable<int> bancadaID, Nullable<int> maquinaID)
        {
            var tareaIDParameter = tareaID.HasValue ?
                new ObjectParameter("TareaID", tareaID) :
                new ObjectParameter("TareaID", typeof(int));
    
            var bancadaIDParameter = bancadaID.HasValue ?
                new ObjectParameter("BancadaID", bancadaID) :
                new ObjectParameter("BancadaID", typeof(int));
    
            var maquinaIDParameter = maquinaID.HasValue ?
                new ObjectParameter("MaquinaID", maquinaID) :
                new ObjectParameter("MaquinaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerTareaMolde_Result>("SP_ObtenerTareaMolde", tareaIDParameter, bancadaIDParameter, maquinaIDParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerTareasIniciadasMaquina_Result> SP_ObtenerTareasIniciadasMaquina(Nullable<int> maquinaID, string codSeccionMaquina)
        {
            var maquinaIDParameter = maquinaID.HasValue ?
                new ObjectParameter("MaquinaID", maquinaID) :
                new ObjectParameter("MaquinaID", typeof(int));
    
            var codSeccionMaquinaParameter = codSeccionMaquina != null ?
                new ObjectParameter("CodSeccionMaquina", codSeccionMaquina) :
                new ObjectParameter("CodSeccionMaquina", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerTareasIniciadasMaquina_Result>("SP_ObtenerTareasIniciadasMaquina", maquinaIDParameter, codSeccionMaquinaParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerTareasMaquina_Result> SP_ObtenerTareasMaquina(Nullable<int> maquinaID)
        {
            var maquinaIDParameter = maquinaID.HasValue ?
                new ObjectParameter("MaquinaID", maquinaID) :
                new ObjectParameter("MaquinaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerTareasMaquina_Result>("SP_ObtenerTareasMaquina", maquinaIDParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerTareasMolde_Result> SP_ObtenerTareasMolde(Nullable<int> bancadaID)
        {
            var bancadaIDParameter = bancadaID.HasValue ?
                new ObjectParameter("BancadaID", bancadaID) :
                new ObjectParameter("BancadaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerTareasMolde_Result>("SP_ObtenerTareasMolde", bancadaIDParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerTareasOrden_Result> SP_ObtenerTareasOrden(string ordenFabricacion, Nullable<int> codigoEmpresa, Nullable<int> revision)
        {
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerTareasOrden_Result>("SP_ObtenerTareasOrden", ordenFabricacionParameter, codigoEmpresaParameter, revisionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerTareasOrdenFabricacion_Result> SP_ObtenerTareasOrdenFabricacion(Nullable<int> ordenFabricacionID)
        {
            var ordenFabricacionIDParameter = ordenFabricacionID.HasValue ?
                new ObjectParameter("OrdenFabricacionID", ordenFabricacionID) :
                new ObjectParameter("OrdenFabricacionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerTareasOrdenFabricacion_Result>("SP_ObtenerTareasOrdenFabricacion", ordenFabricacionIDParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerTareasPendientesMaquina_Result> SP_ObtenerTareasPendientesMaquina(Nullable<int> maquinaID, string codSeccionMaquina)
        {
            var maquinaIDParameter = maquinaID.HasValue ?
                new ObjectParameter("MaquinaID", maquinaID) :
                new ObjectParameter("MaquinaID", typeof(int));
    
            var codSeccionMaquinaParameter = codSeccionMaquina != null ?
                new ObjectParameter("CodSeccionMaquina", codSeccionMaquina) :
                new ObjectParameter("CodSeccionMaquina", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerTareasPendientesMaquina_Result>("SP_ObtenerTareasPendientesMaquina", maquinaIDParameter, codSeccionMaquinaParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerTareasPendientesOFSeccion_Result> SP_ObtenerTareasPendientesOFSeccion(string codSeccionMaquina, string codOF)
        {
            var codSeccionMaquinaParameter = codSeccionMaquina != null ?
                new ObjectParameter("CodSeccionMaquina", codSeccionMaquina) :
                new ObjectParameter("CodSeccionMaquina", typeof(string));
    
            var codOFParameter = codOF != null ?
                new ObjectParameter("CodOF", codOF) :
                new ObjectParameter("CodOF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerTareasPendientesOFSeccion_Result>("SP_ObtenerTareasPendientesOFSeccion", codSeccionMaquinaParameter, codOFParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerTareasProgramadasEnMaquina_Result> SP_ObtenerTareasProgramadasEnMaquina(string codigoMaquina)
        {
            var codigoMaquinaParameter = codigoMaquina != null ?
                new ObjectParameter("CodigoMaquina", codigoMaquina) :
                new ObjectParameter("CodigoMaquina", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerTareasProgramadasEnMaquina_Result>("SP_ObtenerTareasProgramadasEnMaquina", codigoMaquinaParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerTareasProgramadasMaquina_Result> SP_ObtenerTareasProgramadasMaquina(string codigoMaquina)
        {
            var codigoMaquinaParameter = codigoMaquina != null ?
                new ObjectParameter("CodigoMaquina", codigoMaquina) :
                new ObjectParameter("CodigoMaquina", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerTareasProgramadasMaquina_Result>("SP_ObtenerTareasProgramadasMaquina", codigoMaquinaParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerUbicacionesUtillajeBarquilla_Result> SP_ObtenerUbicacionesUtillajeBarquilla(string codigoPrepaquete, string codSeccion)
        {
            var codigoPrepaqueteParameter = codigoPrepaquete != null ?
                new ObjectParameter("CodigoPrepaquete", codigoPrepaquete) :
                new ObjectParameter("CodigoPrepaquete", typeof(string));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerUbicacionesUtillajeBarquilla_Result>("SP_ObtenerUbicacionesUtillajeBarquilla", codigoPrepaqueteParameter, codSeccionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerUbicacionesUtillajeOrdenFabricacion_Result> SP_ObtenerUbicacionesUtillajeOrdenFabricacion(Nullable<int> idOrden, string codSeccion)
        {
            var idOrdenParameter = idOrden.HasValue ?
                new ObjectParameter("IdOrden", idOrden) :
                new ObjectParameter("IdOrden", typeof(int));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerUbicacionesUtillajeOrdenFabricacion_Result>("SP_ObtenerUbicacionesUtillajeOrdenFabricacion", idOrdenParameter, codSeccionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerUbicacionesUtillajeOrdenFabricacionOperacion_Result> SP_ObtenerUbicacionesUtillajeOrdenFabricacionOperacion(Nullable<int> idOperacion, string codSeccion)
        {
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerUbicacionesUtillajeOrdenFabricacionOperacion_Result>("SP_ObtenerUbicacionesUtillajeOrdenFabricacionOperacion", idOperacionParameter, codSeccionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerUbicacionesUtillajePrepaquete_Result> SP_ObtenerUbicacionesUtillajePrepaquete(string codigoPrepaquete, string codSeccion)
        {
            var codigoPrepaqueteParameter = codigoPrepaquete != null ?
                new ObjectParameter("CodigoPrepaquete", codigoPrepaquete) :
                new ObjectParameter("CodigoPrepaquete", typeof(string));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerUbicacionesUtillajePrepaquete_Result>("SP_ObtenerUbicacionesUtillajePrepaquete", codigoPrepaqueteParameter, codSeccionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerUnidadesOrdenPlanificadas_Result> SP_ObtenerUnidadesOrdenPlanificadas(string codigo, Nullable<int> revision)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerUnidadesOrdenPlanificadas_Result>("SP_ObtenerUnidadesOrdenPlanificadas", codigoParameter, revisionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerUnidadesPedido_Result> SP_ObtenerUnidadesPedido(Nullable<int> codigoEmpresa, Nullable<int> numeroPedido, Nullable<System.Guid> lineaPosicion)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var numeroPedidoParameter = numeroPedido.HasValue ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(int));
    
            var lineaPosicionParameter = lineaPosicion.HasValue ?
                new ObjectParameter("LineaPosicion", lineaPosicion) :
                new ObjectParameter("LineaPosicion", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerUnidadesPedido_Result>("SP_ObtenerUnidadesPedido", codigoEmpresaParameter, numeroPedidoParameter, lineaPosicionParameter);
        }
    
        public virtual ObjectResult<SP_ObtenerUnidadesPedidoPlanificadas_Result> SP_ObtenerUnidadesPedidoPlanificadas(Nullable<int> numeroPedido, Nullable<System.Guid> lineaPosicion)
        {
            var numeroPedidoParameter = numeroPedido.HasValue ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(int));
    
            var lineaPosicionParameter = lineaPosicion.HasValue ?
                new ObjectParameter("LineaPosicion", lineaPosicion) :
                new ObjectParameter("LineaPosicion", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ObtenerUnidadesPedidoPlanificadas_Result>("SP_ObtenerUnidadesPedidoPlanificadas", numeroPedidoParameter, lineaPosicionParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_ObtenerUnidadesPedidoSinTallas(Nullable<int> codigoEmpresa, Nullable<int> numeroPedido, Nullable<System.Guid> lineaPosicion)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var numeroPedidoParameter = numeroPedido.HasValue ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(int));
    
            var lineaPosicionParameter = lineaPosicion.HasValue ?
                new ObjectParameter("LineaPosicion", lineaPosicion) :
                new ObjectParameter("LineaPosicion", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_ObtenerUnidadesPedidoSinTallas", codigoEmpresaParameter, numeroPedidoParameter, lineaPosicionParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> SP_ObtenerUnidadesPendientesTarea(Nullable<int> idTarea)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("IdTarea", idTarea) :
                new ObjectParameter("IdTarea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("SP_ObtenerUnidadesPendientesTarea", idTareaParameter);
        }
    
        public virtual ObjectResult<SP_OperarioBuscarPorCodigo_Result> SP_OperarioBuscarPorCodigo(string codigoOperario)
        {
            var codigoOperarioParameter = codigoOperario != null ?
                new ObjectParameter("CodigoOperario", codigoOperario) :
                new ObjectParameter("CodigoOperario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OperarioBuscarPorCodigo_Result>("SP_OperarioBuscarPorCodigo", codigoOperarioParameter);
        }
    
        public virtual ObjectResult<SP_OperarioBuscarPorId_Result> SP_OperarioBuscarPorId(Nullable<int> idOperario)
        {
            var idOperarioParameter = idOperario.HasValue ?
                new ObjectParameter("IdOperario", idOperario) :
                new ObjectParameter("IdOperario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OperarioBuscarPorId_Result>("SP_OperarioBuscarPorId", idOperarioParameter);
        }
    
        public virtual ObjectResult<SP_OrdenesFabricacionPlanificadas_Result> SP_OrdenesFabricacionPlanificadas(Nullable<int> numeroPedido, string nombreCliente, string codigoArticulo, Nullable<int> lineaOrden, string ordenFabricacion)
        {
            var numeroPedidoParameter = numeroPedido.HasValue ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(int));
    
            var nombreClienteParameter = nombreCliente != null ?
                new ObjectParameter("NombreCliente", nombreCliente) :
                new ObjectParameter("NombreCliente", typeof(string));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var lineaOrdenParameter = lineaOrden.HasValue ?
                new ObjectParameter("LineaOrden", lineaOrden) :
                new ObjectParameter("LineaOrden", typeof(int));
    
            var ordenFabricacionParameter = ordenFabricacion != null ?
                new ObjectParameter("OrdenFabricacion", ordenFabricacion) :
                new ObjectParameter("OrdenFabricacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OrdenesFabricacionPlanificadas_Result>("SP_OrdenesFabricacionPlanificadas", numeroPedidoParameter, nombreClienteParameter, codigoArticuloParameter, lineaOrdenParameter, ordenFabricacionParameter);
        }
    
        public virtual ObjectResult<SP_OrdenFabricacionBuscarUbicacionesTareasPorBarquilla_Result> SP_OrdenFabricacionBuscarUbicacionesTareasPorBarquilla(string codigoEtiqueta, string codSeccion)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OrdenFabricacionBuscarUbicacionesTareasPorBarquilla_Result>("SP_OrdenFabricacionBuscarUbicacionesTareasPorBarquilla", codigoEtiquetaParameter, codSeccionParameter);
        }
    
        public virtual ObjectResult<SP_OrdenFabricacionObtenerInformacionTareaPorOperacionYTalla_Result> SP_OrdenFabricacionObtenerInformacionTareaPorOperacionYTalla(Nullable<int> idOperacion, string talla)
        {
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            var tallaParameter = talla != null ?
                new ObjectParameter("Talla", talla) :
                new ObjectParameter("Talla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OrdenFabricacionObtenerInformacionTareaPorOperacionYTalla_Result>("SP_OrdenFabricacionObtenerInformacionTareaPorOperacionYTalla", idOperacionParameter, tallaParameter);
        }
    
        public virtual ObjectResult<SP_OrdenFabricacionObtenerOperacionesEnSeccion_Result> SP_OrdenFabricacionObtenerOperacionesEnSeccion(Nullable<int> id, string codSeccion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OrdenFabricacionObtenerOperacionesEnSeccion_Result>("SP_OrdenFabricacionObtenerOperacionesEnSeccion", idParameter, codSeccionParameter);
        }
    
        public virtual ObjectResult<SP_OrdenFabricacionObtenerOperacionesPorBarquilla_Result> SP_OrdenFabricacionObtenerOperacionesPorBarquilla(string codigoEtiqueta)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OrdenFabricacionObtenerOperacionesPorBarquilla_Result>("SP_OrdenFabricacionObtenerOperacionesPorBarquilla", codigoEtiquetaParameter);
        }
    
        public virtual ObjectResult<string> SP_OrdenFabricacionObtenerTallasArticulo(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_OrdenFabricacionObtenerTallasArticulo", idParameter);
        }
    
        public virtual ObjectResult<SP_OrdenFabricacionOperacionBuscarMaterias_Result> SP_OrdenFabricacionOperacionBuscarMaterias(Nullable<int> idOperacion)
        {
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OrdenFabricacionOperacionBuscarMaterias_Result>("SP_OrdenFabricacionOperacionBuscarMaterias", idOperacionParameter);
        }
    
        public virtual ObjectResult<SP_OrdenFabricacionOperacionBuscarPorId_Result> SP_OrdenFabricacionOperacionBuscarPorId(Nullable<int> idOperacion)
        {
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OrdenFabricacionOperacionBuscarPorId_Result>("SP_OrdenFabricacionOperacionBuscarPorId", idOperacionParameter);
        }
    
        public virtual ObjectResult<SP_PaqueteGenerarConsumoInterno_Result> SP_PaqueteGenerarConsumoInterno(Nullable<int> idPaquete, Nullable<double> cantidadConsumir, string observaciones, Nullable<int> idOperacion, string usuario)
        {
            var idPaqueteParameter = idPaquete.HasValue ?
                new ObjectParameter("IdPaquete", idPaquete) :
                new ObjectParameter("IdPaquete", typeof(int));
    
            var cantidadConsumirParameter = cantidadConsumir.HasValue ?
                new ObjectParameter("CantidadConsumir", cantidadConsumir) :
                new ObjectParameter("CantidadConsumir", typeof(double));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PaqueteGenerarConsumoInterno_Result>("SP_PaqueteGenerarConsumoInterno", idPaqueteParameter, cantidadConsumirParameter, observacionesParameter, idOperacionParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<SP_PrepaqueteActualizarCantidad_Result> SP_PrepaqueteActualizarCantidad(string codigoEtiqueta, Nullable<double> cantidad)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PrepaqueteActualizarCantidad_Result>("SP_PrepaqueteActualizarCantidad", codigoEtiquetaParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<SP_PrepaqueteBuscarEnSeccion_Result> SP_PrepaqueteBuscarEnSeccion(string codigoEtiqueta, string codigoSeccion)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var codigoSeccionParameter = codigoSeccion != null ?
                new ObjectParameter("CodigoSeccion", codigoSeccion) :
                new ObjectParameter("CodigoSeccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PrepaqueteBuscarEnSeccion_Result>("SP_PrepaqueteBuscarEnSeccion", codigoEtiquetaParameter, codigoSeccionParameter);
        }
    
        public virtual ObjectResult<SP_PrepaqueteBuscarPorCodigo_Result> SP_PrepaqueteBuscarPorCodigo(string codigoEtiqueta)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PrepaqueteBuscarPorCodigo_Result>("SP_PrepaqueteBuscarPorCodigo", codigoEtiquetaParameter);
        }
    
        public virtual ObjectResult<SP_PrepaqueteBuscarTareaMaquinas_Result> SP_PrepaqueteBuscarTareaMaquinas(string codigoEtiqueta)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PrepaqueteBuscarTareaMaquinas_Result>("SP_PrepaqueteBuscarTareaMaquinas", codigoEtiquetaParameter);
        }
    
        public virtual int SP_ProgramarTareaPC(string idTareas, Nullable<int> idMaquina, ObjectParameter resultado, ObjectParameter error)
        {
            var idTareasParameter = idTareas != null ?
                new ObjectParameter("IdTareas", idTareas) :
                new ObjectParameter("IdTareas", typeof(string));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ProgramarTareaPC", idTareasParameter, idMaquinaParameter, resultado, error);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ProgramarTareaPDA(string codigoEtiqueta, string codigoMaquina, ObjectParameter resultado, ObjectParameter error)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var codigoMaquinaParameter = codigoMaquina != null ?
                new ObjectParameter("CodigoMaquina", codigoMaquina) :
                new ObjectParameter("CodigoMaquina", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ProgramarTareaPDA", codigoEtiquetaParameter, codigoMaquinaParameter, resultado, error);
        }
    
        public virtual ObjectResult<SP_ProgramarTareas_Result> SP_ProgramarTareas(string idTareas, Nullable<bool> alFinal, Nullable<int> idMaquina, Nullable<bool> esAgrupacion, ObjectParameter resultado, ObjectParameter error)
        {
            var idTareasParameter = idTareas != null ?
                new ObjectParameter("IdTareas", idTareas) :
                new ObjectParameter("IdTareas", typeof(string));
    
            var alFinalParameter = alFinal.HasValue ?
                new ObjectParameter("AlFinal", alFinal) :
                new ObjectParameter("AlFinal", typeof(bool));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var esAgrupacionParameter = esAgrupacion.HasValue ?
                new ObjectParameter("EsAgrupacion", esAgrupacion) :
                new ObjectParameter("EsAgrupacion", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ProgramarTareas_Result>("SP_ProgramarTareas", idTareasParameter, alFinalParameter, idMaquinaParameter, esAgrupacionParameter, resultado, error);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_PuestoCrearCompleto(string nombre, Nullable<bool> esMaster, Nullable<bool> esManual, string codSeccion, Nullable<bool> descontarAuto, Nullable<int> direccionPulso, Nullable<int> productoPorPulso)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var esMasterParameter = esMaster.HasValue ?
                new ObjectParameter("EsMaster", esMaster) :
                new ObjectParameter("EsMaster", typeof(bool));
    
            var esManualParameter = esManual.HasValue ?
                new ObjectParameter("EsManual", esManual) :
                new ObjectParameter("EsManual", typeof(bool));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("CodSeccion", codSeccion) :
                new ObjectParameter("CodSeccion", typeof(string));
    
            var descontarAutoParameter = descontarAuto.HasValue ?
                new ObjectParameter("DescontarAuto", descontarAuto) :
                new ObjectParameter("DescontarAuto", typeof(bool));
    
            var direccionPulsoParameter = direccionPulso.HasValue ?
                new ObjectParameter("DireccionPulso", direccionPulso) :
                new ObjectParameter("DireccionPulso", typeof(int));
    
            var productoPorPulsoParameter = productoPorPulso.HasValue ?
                new ObjectParameter("ProductoPorPulso", productoPorPulso) :
                new ObjectParameter("ProductoPorPulso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_PuestoCrearCompleto", nombreParameter, esMasterParameter, esManualParameter, codSeccionParameter, descontarAutoParameter, direccionPulsoParameter, productoPorPulsoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_RecibirBarquillaTaller(Nullable<int> idTaller, string codBarquilla, string seccion)
        {
            var idTallerParameter = idTaller.HasValue ?
                new ObjectParameter("IdTaller", idTaller) :
                new ObjectParameter("IdTaller", typeof(int));
    
            var codBarquillaParameter = codBarquilla != null ?
                new ObjectParameter("CodBarquilla", codBarquilla) :
                new ObjectParameter("CodBarquilla", typeof(string));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_RecibirBarquillaTaller", idTallerParameter, codBarquillaParameter, seccionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_RecibirPrepaqueteTaller(Nullable<int> idTaller, string codPrepaquete, string seccion)
        {
            var idTallerParameter = idTaller.HasValue ?
                new ObjectParameter("IdTaller", idTaller) :
                new ObjectParameter("IdTaller", typeof(int));
    
            var codPrepaqueteParameter = codPrepaquete != null ?
                new ObjectParameter("CodPrepaquete", codPrepaquete) :
                new ObjectParameter("CodPrepaquete", typeof(string));
    
            var seccionParameter = seccion != null ?
                new ObjectParameter("Seccion", seccion) :
                new ObjectParameter("Seccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_RecibirPrepaqueteTaller", idTallerParameter, codPrepaqueteParameter, seccionParameter);
        }
    
        public virtual ObjectResult<SP_RefrescarDatosSage_Result> SP_RefrescarDatosSage(Nullable<int> codigoEmpresa, Nullable<int> numeroPedido, string codigoArticulo, Nullable<System.Guid> lineasPedido)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var numeroPedidoParameter = numeroPedido.HasValue ?
                new ObjectParameter("NumeroPedido", numeroPedido) :
                new ObjectParameter("NumeroPedido", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var lineasPedidoParameter = lineasPedido.HasValue ?
                new ObjectParameter("LineasPedido", lineasPedido) :
                new ObjectParameter("LineasPedido", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RefrescarDatosSage_Result>("SP_RefrescarDatosSage", codigoEmpresaParameter, numeroPedidoParameter, codigoArticuloParameter, lineasPedidoParameter);
        }
    
        public virtual ObjectResult<string> SP_RegistrarStockCosteSAGE(Nullable<int> codigoEmpresa, string codigoArticulo, Nullable<decimal> precio, string comentario)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RegistrarStockCosteSAGE", codigoEmpresaParameter, codigoArticuloParameter, precioParameter, comentarioParameter);
        }
    
        public virtual ObjectResult<string> SP_RegistrarStockCosteSAGE_bck(Nullable<int> codigoEmpresa, string codigoArticulo, Nullable<int> precio, string lote, string origenMovimiento)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(int));
    
            var loteParameter = lote != null ?
                new ObjectParameter("Lote", lote) :
                new ObjectParameter("Lote", typeof(string));
    
            var origenMovimientoParameter = origenMovimiento != null ?
                new ObjectParameter("OrigenMovimiento", origenMovimiento) :
                new ObjectParameter("OrigenMovimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RegistrarStockCosteSAGE_bck", codigoEmpresaParameter, codigoArticuloParameter, precioParameter, loteParameter, origenMovimientoParameter);
        }
    
        public virtual ObjectResult<string> SP_RegistrarStockEntradaSAGE(Nullable<int> codigoEmpresa, string codigoArticulo, Nullable<decimal> cantidad, string partida, string lote, string origenMovimiento, string tallaArticulo)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var partidaParameter = partida != null ?
                new ObjectParameter("Partida", partida) :
                new ObjectParameter("Partida", typeof(string));
    
            var loteParameter = lote != null ?
                new ObjectParameter("Lote", lote) :
                new ObjectParameter("Lote", typeof(string));
    
            var origenMovimientoParameter = origenMovimiento != null ?
                new ObjectParameter("OrigenMovimiento", origenMovimiento) :
                new ObjectParameter("OrigenMovimiento", typeof(string));
    
            var tallaArticuloParameter = tallaArticulo != null ?
                new ObjectParameter("TallaArticulo", tallaArticulo) :
                new ObjectParameter("TallaArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RegistrarStockEntradaSAGE", codigoEmpresaParameter, codigoArticuloParameter, cantidadParameter, partidaParameter, loteParameter, origenMovimientoParameter, tallaArticuloParameter);
        }
    
        public virtual ObjectResult<string> SP_RegistrarStockSAGE(Nullable<int> codigoEmpresa, string codigoArticulo, Nullable<decimal> cantidad, string partida, string lote, string origenMovimiento)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var partidaParameter = partida != null ?
                new ObjectParameter("Partida", partida) :
                new ObjectParameter("Partida", typeof(string));
    
            var loteParameter = lote != null ?
                new ObjectParameter("Lote", lote) :
                new ObjectParameter("Lote", typeof(string));
    
            var origenMovimientoParameter = origenMovimiento != null ?
                new ObjectParameter("OrigenMovimiento", origenMovimiento) :
                new ObjectParameter("OrigenMovimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RegistrarStockSAGE", codigoEmpresaParameter, codigoArticuloParameter, cantidadParameter, partidaParameter, loteParameter, origenMovimientoParameter);
        }
    
        public virtual ObjectResult<string> SP_RegistrarStockSAGE_backup(Nullable<int> codigoEmpresa, string codigoArticulo, Nullable<int> cantidad, string lote, string origenMovimiento)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var loteParameter = lote != null ?
                new ObjectParameter("Lote", lote) :
                new ObjectParameter("Lote", typeof(string));
    
            var origenMovimientoParameter = origenMovimiento != null ?
                new ObjectParameter("OrigenMovimiento", origenMovimiento) :
                new ObjectParameter("OrigenMovimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RegistrarStockSAGE_backup", codigoEmpresaParameter, codigoArticuloParameter, cantidadParameter, loteParameter, origenMovimientoParameter);
        }
    
        public virtual ObjectResult<string> SP_RegistrarStockSalidaSAGE(Nullable<int> codigoEmpresa, string codigoArticulo, Nullable<decimal> cantidad, string partida, string lote, string origenMovimiento, string tallaArticulo)
        {
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var partidaParameter = partida != null ?
                new ObjectParameter("Partida", partida) :
                new ObjectParameter("Partida", typeof(string));
    
            var loteParameter = lote != null ?
                new ObjectParameter("Lote", lote) :
                new ObjectParameter("Lote", typeof(string));
    
            var origenMovimientoParameter = origenMovimiento != null ?
                new ObjectParameter("OrigenMovimiento", origenMovimiento) :
                new ObjectParameter("OrigenMovimiento", typeof(string));
    
            var tallaArticuloParameter = tallaArticulo != null ?
                new ObjectParameter("TallaArticulo", tallaArticulo) :
                new ObjectParameter("TallaArticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RegistrarStockSalidaSAGE", codigoEmpresaParameter, codigoArticuloParameter, cantidadParameter, partidaParameter, loteParameter, origenMovimientoParameter, tallaArticuloParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int SP_StockArticuloVerificar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_StockArticuloVerificar", idParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SP_TodasTareasFinalizadas(string ordenFabricacionCodigo, Nullable<int> revision)
        {
            var ordenFabricacionCodigoParameter = ordenFabricacionCodigo != null ?
                new ObjectParameter("OrdenFabricacionCodigo", ordenFabricacionCodigo) :
                new ObjectParameter("OrdenFabricacionCodigo", typeof(string));
    
            var revisionParameter = revision.HasValue ?
                new ObjectParameter("Revision", revision) :
                new ObjectParameter("Revision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SP_TodasTareasFinalizadas", ordenFabricacionCodigoParameter, revisionParameter);
        }
    
        public virtual int SP_TraspasarDatosSageOF(string codigoOF, Nullable<int> codigoEmpresa)
        {
            var codigoOFParameter = codigoOF != null ?
                new ObjectParameter("CodigoOF", codigoOF) :
                new ObjectParameter("CodigoOF", typeof(string));
    
            var codigoEmpresaParameter = codigoEmpresa.HasValue ?
                new ObjectParameter("CodigoEmpresa", codigoEmpresa) :
                new ObjectParameter("CodigoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TraspasarDatosSageOF", codigoOFParameter, codigoEmpresaParameter);
        }
    
        public virtual ObjectResult<SP_UbicarAgrupacion_Result> SP_UbicarAgrupacion(string codigoAgrupacion, string codigoUbicacion)
        {
            var codigoAgrupacionParameter = codigoAgrupacion != null ?
                new ObjectParameter("CodigoAgrupacion", codigoAgrupacion) :
                new ObjectParameter("CodigoAgrupacion", typeof(string));
    
            var codigoUbicacionParameter = codigoUbicacion != null ?
                new ObjectParameter("CodigoUbicacion", codigoUbicacion) :
                new ObjectParameter("CodigoUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UbicarAgrupacion_Result>("SP_UbicarAgrupacion", codigoAgrupacionParameter, codigoUbicacionParameter);
        }
    
        public virtual ObjectResult<SP_UbicarContenedor_Result> SP_UbicarContenedor(string codigoEtiqueta, string codigoUbicacion)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            var codigoUbicacionParameter = codigoUbicacion != null ?
                new ObjectParameter("CodigoUbicacion", codigoUbicacion) :
                new ObjectParameter("CodigoUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UbicarContenedor_Result>("SP_UbicarContenedor", codigoEtiquetaParameter, codigoUbicacionParameter);
        }
    
        public virtual ObjectResult<SP_UbicarPrepaquete_Result> SP_UbicarPrepaquete(string codigoPrepaquete, string codigoUbicacion)
        {
            var codigoPrepaqueteParameter = codigoPrepaquete != null ?
                new ObjectParameter("CodigoPrepaquete", codigoPrepaquete) :
                new ObjectParameter("CodigoPrepaquete", typeof(string));
    
            var codigoUbicacionParameter = codigoUbicacion != null ?
                new ObjectParameter("CodigoUbicacion", codigoUbicacion) :
                new ObjectParameter("CodigoUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UbicarPrepaquete_Result>("SP_UbicarPrepaquete", codigoPrepaqueteParameter, codigoUbicacionParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SP_UtillajeTallaColeccionBuscarPorBarquilla_Result> SP_UtillajeTallaColeccionBuscarPorBarquilla(string codigoEtiqueta)
        {
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UtillajeTallaColeccionBuscarPorBarquilla_Result>("SP_UtillajeTallaColeccionBuscarPorBarquilla", codigoEtiquetaParameter);
        }
    
        public virtual ObjectResult<SP_UtillajeTallaColeccionBuscarPorCodUtillaje_Result> SP_UtillajeTallaColeccionBuscarPorCodUtillaje(string codUtillaje)
        {
            var codUtillajeParameter = codUtillaje != null ?
                new ObjectParameter("CodUtillaje", codUtillaje) :
                new ObjectParameter("CodUtillaje", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UtillajeTallaColeccionBuscarPorCodUtillaje_Result>("SP_UtillajeTallaColeccionBuscarPorCodUtillaje", codUtillajeParameter);
        }
    
        public virtual ObjectResult<SP_UtillajeTallaColeccionBuscarPorIdOperacion_Result> SP_UtillajeTallaColeccionBuscarPorIdOperacion(Nullable<int> idOperacion)
        {
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UtillajeTallaColeccionBuscarPorIdOperacion_Result>("SP_UtillajeTallaColeccionBuscarPorIdOperacion", idOperacionParameter);
        }
    
        public virtual ObjectResult<SP_UtillajeTallaColeccionUbicar_Result> SP_UtillajeTallaColeccionUbicar(string codUbicacion, string codigoEtiqueta)
        {
            var codUbicacionParameter = codUbicacion != null ?
                new ObjectParameter("CodUbicacion", codUbicacion) :
                new ObjectParameter("CodUbicacion", typeof(string));
    
            var codigoEtiquetaParameter = codigoEtiqueta != null ?
                new ObjectParameter("CodigoEtiqueta", codigoEtiqueta) :
                new ObjectParameter("CodigoEtiqueta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UtillajeTallaColeccionUbicar_Result>("SP_UtillajeTallaColeccionUbicar", codUbicacionParameter, codigoEtiquetaParameter);
        }
    
        public virtual ObjectResult<SP_VaciarAgrupacion_Result> SP_VaciarAgrupacion(string codigoAgrupacion)
        {
            var codigoAgrupacionParameter = codigoAgrupacion != null ?
                new ObjectParameter("CodigoAgrupacion", codigoAgrupacion) :
                new ObjectParameter("CodigoAgrupacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VaciarAgrupacion_Result>("SP_VaciarAgrupacion", codigoAgrupacionParameter);
        }
    
        public virtual ObjectResult<SP_VaciarUbicacion_Result> SP_VaciarUbicacion(string codigoUbicacion)
        {
            var codigoUbicacionParameter = codigoUbicacion != null ?
                new ObjectParameter("CodigoUbicacion", codigoUbicacion) :
                new ObjectParameter("CodigoUbicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VaciarUbicacion_Result>("SP_VaciarUbicacion", codigoUbicacionParameter);
        }
    }
}
